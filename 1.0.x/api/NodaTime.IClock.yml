### YamlMime:ManagedReference
items:
- uid: NodaTime.IClock
  commentId: T:NodaTime.IClock
  id: IClock
  parent: NodaTime
  children:
  - NodaTime.IClock.Now
  langs:
  - csharp
  - vb
  name: IClock
  nameWithType: IClock
  fullName: NodaTime.IClock
  type: Interface
  source:
    remote:
      path: 1.0.x/src/NodaTime/IClock.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: IClock
    path: src/NodaTime/IClock.cs
    startLine: 37
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nRepresents a clock which can return the current time as an <xref href=\"NodaTime.Instant\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<xref href=\"NodaTime.IClock\" data-throw-if-not-resolved=\"false\"></xref> is intended for use anywhere you need to have access to the current time.\nAlthough it&apos;s not strictly incorrect to call <code>SystemClock.Instance.Now</code> directly,\nin the same way as you might call <xref href=\"System.DateTime.UtcNow\" data-throw-if-not-resolved=\"false\"></xref>, it&apos;s strongly discouraged\nas a matter of style for production code. We recommend providing an instance of <xref href=\"NodaTime.IClock\" data-throw-if-not-resolved=\"false\"></xref>\nto anything that needs it, which allows you to write tests using the stub clock in the NodaTime.Testing\nassembly (or your own implementation).\n"
  example: []
  syntax:
    content: public interface IClock
    content.vb: Public Interface IClock
  seealso:
  - linkId: NodaTime.SystemClock
    commentId: T:NodaTime.SystemClock
  - linkId: NodaTime.Testing.StubClock
    commentId: T:NodaTime.Testing.StubClock
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: NodaTime.IClock.Now
  commentId: P:NodaTime.IClock.Now
  id: Now
  parent: NodaTime.IClock
  langs:
  - csharp
  - vb
  name: Now
  nameWithType: IClock.Now
  fullName: NodaTime.IClock.Now
  type: Property
  source:
    remote:
      path: 1.0.x/src/NodaTime/IClock.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Now
    path: src/NodaTime/IClock.cs
    startLine: 42
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nGets the current <xref href=\"NodaTime.Instant\" data-throw-if-not-resolved=\"false\"></xref> on the time line according to this clock.\n"
  example: []
  syntax:
    content: Instant Now { get; }
    parameters: []
    return:
      type: NodaTime.Instant
    content.vb: ReadOnly Property Now As Instant
  overload: NodaTime.IClock.Now*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: NodaTime.Instant
  commentId: T:NodaTime.Instant
  parent: NodaTime
  name: Instant
  nameWithType: Instant
  fullName: NodaTime.Instant
- uid: NodaTime.IClock
  commentId: T:NodaTime.IClock
  parent: NodaTime
  name: IClock
  nameWithType: IClock
  fullName: NodaTime.IClock
- uid: System.DateTime.UtcNow
  commentId: P:System.DateTime.UtcNow
  isExternal: true
- uid: NodaTime.SystemClock
  commentId: T:NodaTime.SystemClock
  parent: NodaTime
  name: SystemClock
  nameWithType: SystemClock
  fullName: NodaTime.SystemClock
- uid: NodaTime.Testing.StubClock
  commentId: T:NodaTime.Testing.StubClock
  isExternal: true
- uid: NodaTime
  commentId: N:NodaTime
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: NodaTime.IClock.Now*
  commentId: Overload:NodaTime.IClock.Now
  name: Now
  nameWithType: IClock.Now
  fullName: NodaTime.IClock.Now
shouldSkipMarkup: true
