### YamlMime:ManagedReference
items:
- uid: NodaTime.Calendars.Era
  commentId: T:NodaTime.Calendars.Era
  id: Era
  parent: NodaTime.Calendars
  children:
  - NodaTime.Calendars.Era.AnnoHegirae
  - NodaTime.Calendars.Era.AnnoMartyrm
  - NodaTime.Calendars.Era.AnnoMartyrum
  - NodaTime.Calendars.Era.AnnoMundi
  - NodaTime.Calendars.Era.AnnoPersico
  - NodaTime.Calendars.Era.BeforeCommon
  - NodaTime.Calendars.Era.Common
  - NodaTime.Calendars.Era.Name
  - NodaTime.Calendars.Era.ToString
  langs:
  - csharp
  - vb
  name: Era
  nameWithType: Era
  fullName: NodaTime.Calendars.Era
  type: Class
  source:
    remote:
      path: 1.4.x/src/NodaTime/Calendars/Era.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Era
    path: src/NodaTime/Calendars/Era.cs
    startLine: 16
  assemblies:
  - NodaTime
  namespace: NodaTime.Calendars
  summary: "\nRepresents an era used in a calendar.\n"
  remarks: >-
    All the built-in calendars in Noda Time use the values specified by the static

    read-only fields in this class. These may be compared for reference equality to check for specific

    eras.
  example: []
  syntax:
    content: public sealed class Era
    content.vb: Public NotInheritable Class Era
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: NodaTime.Calendars.Era.Common
  commentId: F:NodaTime.Calendars.Era.Common
  id: Common
  parent: NodaTime.Calendars.Era
  langs:
  - csharp
  - vb
  name: Common
  nameWithType: Era.Common
  fullName: NodaTime.Calendars.Era.Common
  type: Field
  source:
    remote:
      path: 1.4.x/src/NodaTime/Calendars/Era.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Common
    path: src/NodaTime/Calendars/Era.cs
    startLine: 22
  assemblies:
  - NodaTime
  namespace: NodaTime.Calendars
  summary: "\nThe &quot;Common&quot; era (CE), also known as Anno Domini (AD). This is used in the ISO, Gregorian and Julian calendars.\n"
  example: []
  syntax:
    content: public static readonly Era Common
    return:
      type: NodaTime.Calendars.Era
    content.vb: Public Shared ReadOnly Common As Era
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NodaTime.Calendars.Era.BeforeCommon
  commentId: F:NodaTime.Calendars.Era.BeforeCommon
  id: BeforeCommon
  parent: NodaTime.Calendars.Era
  langs:
  - csharp
  - vb
  name: BeforeCommon
  nameWithType: Era.BeforeCommon
  fullName: NodaTime.Calendars.Era.BeforeCommon
  type: Field
  source:
    remote:
      path: 1.4.x/src/NodaTime/Calendars/Era.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: BeforeCommon
    path: src/NodaTime/Calendars/Era.cs
    startLine: 27
  assemblies:
  - NodaTime
  namespace: NodaTime.Calendars
  summary: "\nThe &quot;before common&quot; era (BCE), also known as Before Christ (BC). This is used in the ISO, Gregorian and Julian calendars.\n"
  example: []
  syntax:
    content: public static readonly Era BeforeCommon
    return:
      type: NodaTime.Calendars.Era
    content.vb: Public Shared ReadOnly BeforeCommon As Era
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NodaTime.Calendars.Era.AnnoMartyrum
  commentId: F:NodaTime.Calendars.Era.AnnoMartyrum
  id: AnnoMartyrum
  parent: NodaTime.Calendars.Era
  langs:
  - csharp
  - vb
  name: AnnoMartyrum
  nameWithType: Era.AnnoMartyrum
  fullName: NodaTime.Calendars.Era.AnnoMartyrum
  type: Field
  source:
    remote:
      path: 1.4.x/src/NodaTime/Calendars/Era.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: AnnoMartyrum
    path: src/NodaTime/Calendars/Era.cs
    startLine: 32
  assemblies:
  - NodaTime
  namespace: NodaTime.Calendars
  summary: "\nThe &quot;Anno Martyrum&quot; or &quot;Era of the Martyrs&quot;. This is the sole era used in the Coptic calendar.\n"
  example: []
  syntax:
    content: public static readonly Era AnnoMartyrum
    return:
      type: NodaTime.Calendars.Era
    content.vb: Public Shared ReadOnly AnnoMartyrum As Era
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NodaTime.Calendars.Era.AnnoMartyrm
  commentId: F:NodaTime.Calendars.Era.AnnoMartyrm
  id: AnnoMartyrm
  parent: NodaTime.Calendars.Era
  langs:
  - csharp
  - vb
  name: AnnoMartyrm
  nameWithType: Era.AnnoMartyrm
  fullName: NodaTime.Calendars.Era.AnnoMartyrm
  type: Field
  source:
    remote:
      path: 1.4.x/src/NodaTime/Calendars/Era.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: AnnoMartyrm
    path: src/NodaTime/Calendars/Era.cs
    startLine: 38
  assemblies:
  - NodaTime
  namespace: NodaTime.Calendars
  summary: "\nThe &quot;Anno Martyrum&quot; or &quot;Era of the Martyrs&quot;. This is the sole era used in the Coptic calendar.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use AnnoMartyrum instead. This field's name was a typo, and it will be removed in a future release.")]

      public static readonly Era AnnoMartyrm
    return:
      type: NodaTime.Calendars.Era
    content.vb: >-
      <Obsolete("Use AnnoMartyrum instead. This field's name was a typo, and it will be removed in a future release.")>

      Public Shared ReadOnly AnnoMartyrm As Era
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use AnnoMartyrum instead. This field's name was a typo, and it will be removed in a future release.
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NodaTime.Calendars.Era.AnnoHegirae
  commentId: F:NodaTime.Calendars.Era.AnnoHegirae
  id: AnnoHegirae
  parent: NodaTime.Calendars.Era
  langs:
  - csharp
  - vb
  name: AnnoHegirae
  nameWithType: Era.AnnoHegirae
  fullName: NodaTime.Calendars.Era.AnnoHegirae
  type: Field
  source:
    remote:
      path: 1.4.x/src/NodaTime/Calendars/Era.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: AnnoHegirae
    path: src/NodaTime/Calendars/Era.cs
    startLine: 43
  assemblies:
  - NodaTime
  namespace: NodaTime.Calendars
  summary: "\nThe &quot;Anno Hegira&quot; era. This is the sole era used in the Hijri (Islamic) calendar.\n"
  example: []
  syntax:
    content: public static readonly Era AnnoHegirae
    return:
      type: NodaTime.Calendars.Era
    content.vb: Public Shared ReadOnly AnnoHegirae As Era
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NodaTime.Calendars.Era.AnnoMundi
  commentId: F:NodaTime.Calendars.Era.AnnoMundi
  id: AnnoMundi
  parent: NodaTime.Calendars.Era
  langs:
  - csharp
  - vb
  name: AnnoMundi
  nameWithType: Era.AnnoMundi
  fullName: NodaTime.Calendars.Era.AnnoMundi
  type: Field
  source:
    remote:
      path: 1.4.x/src/NodaTime/Calendars/Era.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: AnnoMundi
    path: src/NodaTime/Calendars/Era.cs
    startLine: 48
  assemblies:
  - NodaTime
  namespace: NodaTime.Calendars
  summary: "\nThe &quot;Anno Mundi&quot; era. This is the sole era used in the Hebrew calendar.\n"
  example: []
  syntax:
    content: public static readonly Era AnnoMundi
    return:
      type: NodaTime.Calendars.Era
    content.vb: Public Shared ReadOnly AnnoMundi As Era
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NodaTime.Calendars.Era.AnnoPersico
  commentId: F:NodaTime.Calendars.Era.AnnoPersico
  id: AnnoPersico
  parent: NodaTime.Calendars.Era
  langs:
  - csharp
  - vb
  name: AnnoPersico
  nameWithType: Era.AnnoPersico
  fullName: NodaTime.Calendars.Era.AnnoPersico
  type: Field
  source:
    remote:
      path: 1.4.x/src/NodaTime/Calendars/Era.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: AnnoPersico
    path: src/NodaTime/Calendars/Era.cs
    startLine: 53
  assemblies:
  - NodaTime
  namespace: NodaTime.Calendars
  summary: "\nThe &quot;Anno Persico&quot; era. This is the sole era used in the Persian calendar.\n"
  example: []
  syntax:
    content: public static readonly Era AnnoPersico
    return:
      type: NodaTime.Calendars.Era
    content.vb: Public Shared ReadOnly AnnoPersico As Era
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NodaTime.Calendars.Era.Name
  commentId: P:NodaTime.Calendars.Era.Name
  id: Name
  parent: NodaTime.Calendars.Era
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Era.Name
  fullName: NodaTime.Calendars.Era.Name
  type: Property
  source:
    remote:
      path: 1.4.x/src/NodaTime/Calendars/Era.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Name
    path: src/NodaTime/Calendars/Era.cs
    startLine: 69
  assemblies:
  - NodaTime
  namespace: NodaTime.Calendars
  summary: "\nReturns the name of this era, e.g. &quot;CE&quot; or &quot;BCE&quot;.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: NodaTime.Calendars.Era.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NodaTime.Calendars.Era.ToString
  commentId: M:NodaTime.Calendars.Era.ToString
  id: ToString
  parent: NodaTime.Calendars.Era
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Era.ToString()
  fullName: NodaTime.Calendars.Era.ToString()
  type: Method
  source:
    remote:
      path: 1.4.x/src/NodaTime/Calendars/Era.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: ToString
    path: src/NodaTime/Calendars/Era.cs
    startLine: 75
  assemblies:
  - NodaTime
  namespace: NodaTime.Calendars
  summary: "\nReturns the name of this era.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The name of this era.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: NodaTime.Calendars.Era.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: NodaTime.Calendars
  commentId: N:NodaTime.Calendars
  name: NodaTime.Calendars
  nameWithType: NodaTime.Calendars
  fullName: NodaTime.Calendars
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NodaTime.Calendars.Era
  commentId: T:NodaTime.Calendars.Era
  parent: NodaTime.Calendars
  name: Era
  nameWithType: Era
  fullName: NodaTime.Calendars.Era
- uid: NodaTime.Calendars.Era.Name*
  commentId: Overload:NodaTime.Calendars.Era.Name
  name: Name
  nameWithType: Era.Name
  fullName: NodaTime.Calendars.Era.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NodaTime.Calendars.Era.ToString*
  commentId: Overload:NodaTime.Calendars.Era.ToString
  name: ToString
  nameWithType: Era.ToString
  fullName: NodaTime.Calendars.Era.ToString
shouldSkipMarkup: true
