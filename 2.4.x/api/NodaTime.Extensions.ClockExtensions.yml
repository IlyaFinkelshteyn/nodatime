### YamlMime:ManagedReference
items:
- uid: NodaTime.Extensions.ClockExtensions
  commentId: T:NodaTime.Extensions.ClockExtensions
  id: ClockExtensions
  parent: NodaTime.Extensions
  children:
  - NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone(NodaTime.IClock)
  - NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone(NodaTime.IClock)
  - NodaTime.Extensions.ClockExtensions.InUtc(NodaTime.IClock)
  - NodaTime.Extensions.ClockExtensions.InZone(NodaTime.IClock,NodaTime.DateTimeZone)
  - NodaTime.Extensions.ClockExtensions.InZone(NodaTime.IClock,NodaTime.DateTimeZone,NodaTime.CalendarSystem)
  langs:
  - csharp
  - vb
  name: ClockExtensions
  nameWithType: ClockExtensions
  fullName: NodaTime.Extensions.ClockExtensions
  type: Class
  source:
    remote:
      path: 2.4.x/src/NodaTime/Extensions/ClockExtensions.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: ClockExtensions
    path: src/NodaTime/Extensions/ClockExtensions.cs
    startLine: 13
  assemblies:
  - NodaTime
  namespace: NodaTime.Extensions
  summary: "\nExtension methods for <xref href=\"NodaTime.IClock\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class ClockExtensions
    content.vb: Public Module ClockExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: NodaTime.Extensions.ClockExtensions.InZone(NodaTime.IClock,NodaTime.DateTimeZone)
  commentId: M:NodaTime.Extensions.ClockExtensions.InZone(NodaTime.IClock,NodaTime.DateTimeZone)
  id: InZone(NodaTime.IClock,NodaTime.DateTimeZone)
  isExtensionMethod: true
  parent: NodaTime.Extensions.ClockExtensions
  langs:
  - csharp
  - vb
  name: InZone(IClock, DateTimeZone)
  nameWithType: ClockExtensions.InZone(IClock, DateTimeZone)
  fullName: NodaTime.Extensions.ClockExtensions.InZone(NodaTime.IClock, NodaTime.DateTimeZone)
  type: Method
  source:
    remote:
      path: 2.4.x/src/NodaTime/Extensions/ClockExtensions.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: InZone
    path: src/NodaTime/Extensions/ClockExtensions.cs
    startLine: 22
  assemblies:
  - NodaTime
  namespace: NodaTime.Extensions
  summary: "\nConstructs a <xref href=\"NodaTime.ZonedClock\" data-throw-if-not-resolved=\"false\"></xref> from a clock (the target of the method),\nand a time zone.\n"
  example: []
  syntax:
    content: public static ZonedClock InZone(this IClock clock, DateTimeZone zone)
    parameters:
    - id: clock
      type: NodaTime.IClock
      description: Clock to use in the returned object.
    - id: zone
      type: NodaTime.DateTimeZone
      description: Time zone to use in the returned object.
    return:
      type: NodaTime.ZonedClock
      description: A <xref href="NodaTime.ZonedClock" data-throw-if-not-resolved="false"></xref> with the given clock and time zone, in the ISO calendar system.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function InZone(clock As IClock, zone As DateTimeZone) As ZonedClock
  overload: NodaTime.Extensions.ClockExtensions.InZone*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Extensions.ClockExtensions.InZone(NodaTime.IClock,NodaTime.DateTimeZone,NodaTime.CalendarSystem)
  commentId: M:NodaTime.Extensions.ClockExtensions.InZone(NodaTime.IClock,NodaTime.DateTimeZone,NodaTime.CalendarSystem)
  id: InZone(NodaTime.IClock,NodaTime.DateTimeZone,NodaTime.CalendarSystem)
  isExtensionMethod: true
  parent: NodaTime.Extensions.ClockExtensions
  langs:
  - csharp
  - vb
  name: InZone(IClock, DateTimeZone, CalendarSystem)
  nameWithType: ClockExtensions.InZone(IClock, DateTimeZone, CalendarSystem)
  fullName: NodaTime.Extensions.ClockExtensions.InZone(NodaTime.IClock, NodaTime.DateTimeZone, NodaTime.CalendarSystem)
  type: Method
  source:
    remote:
      path: 2.4.x/src/NodaTime/Extensions/ClockExtensions.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: InZone
    path: src/NodaTime/Extensions/ClockExtensions.cs
    startLine: 34
  assemblies:
  - NodaTime
  namespace: NodaTime.Extensions
  summary: "\nConstructs a <xref href=\"NodaTime.ZonedClock\" data-throw-if-not-resolved=\"false\"></xref> from a clock (the target of the method),\na time zone, and a calendar system.\n"
  example: []
  syntax:
    content: public static ZonedClock InZone(this IClock clock, DateTimeZone zone, CalendarSystem calendar)
    parameters:
    - id: clock
      type: NodaTime.IClock
      description: Clock to use in the returned object.
    - id: zone
      type: NodaTime.DateTimeZone
      description: Time zone to use in the returned object.
    - id: calendar
      type: NodaTime.CalendarSystem
      description: Calendar to use in the returned object.
    return:
      type: NodaTime.ZonedClock
      description: A <xref href="NodaTime.ZonedClock" data-throw-if-not-resolved="false"></xref> with the given clock, time zone and calendar system.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function InZone(clock As IClock, zone As DateTimeZone, calendar As CalendarSystem) As ZonedClock
  overload: NodaTime.Extensions.ClockExtensions.InZone*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Extensions.ClockExtensions.InUtc(NodaTime.IClock)
  commentId: M:NodaTime.Extensions.ClockExtensions.InUtc(NodaTime.IClock)
  id: InUtc(NodaTime.IClock)
  isExtensionMethod: true
  parent: NodaTime.Extensions.ClockExtensions
  langs:
  - csharp
  - vb
  name: InUtc(IClock)
  nameWithType: ClockExtensions.InUtc(IClock)
  fullName: NodaTime.Extensions.ClockExtensions.InUtc(NodaTime.IClock)
  type: Method
  source:
    remote:
      path: 2.4.x/src/NodaTime/Extensions/ClockExtensions.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: InUtc
    path: src/NodaTime/Extensions/ClockExtensions.cs
    startLine: 45
  assemblies:
  - NodaTime
  namespace: NodaTime.Extensions
  summary: "\nConstructs a <xref href=\"NodaTime.ZonedClock\" data-throw-if-not-resolved=\"false\"></xref> from a clock (the target of the method),\nusing the UTC time zone and ISO calendar system.\n"
  example: []
  syntax:
    content: public static ZonedClock InUtc(this IClock clock)
    parameters:
    - id: clock
      type: NodaTime.IClock
      description: Clock to use in the returned object.
    return:
      type: NodaTime.ZonedClock
      description: A <xref href="NodaTime.ZonedClock" data-throw-if-not-resolved="false"></xref> with the given clock, in the UTC time zone and ISO calendar system.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function InUtc(clock As IClock) As ZonedClock
  overload: NodaTime.Extensions.ClockExtensions.InUtc*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone(NodaTime.IClock)
  commentId: M:NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone(NodaTime.IClock)
  id: InTzdbSystemDefaultZone(NodaTime.IClock)
  isExtensionMethod: true
  parent: NodaTime.Extensions.ClockExtensions
  langs:
  - csharp
  - vb
  name: InTzdbSystemDefaultZone(IClock)
  nameWithType: ClockExtensions.InTzdbSystemDefaultZone(IClock)
  fullName: NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone(NodaTime.IClock)
  type: Method
  source:
    remote:
      path: 2.4.x/src/NodaTime/Extensions/ClockExtensions.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: InTzdbSystemDefaultZone
    path: src/NodaTime/Extensions/ClockExtensions.cs
    startLine: 59
  assemblies:
  - NodaTime
  namespace: NodaTime.Extensions
  summary: "\nConstructs a <xref href=\"NodaTime.ZonedClock\" data-throw-if-not-resolved=\"false\"></xref> from a clock (the target of the method),\nin the TZDB mapping for the system default time zone time zone and the ISO calendar system.\n"
  example: []
  syntax:
    content: public static ZonedClock InTzdbSystemDefaultZone(this IClock clock)
    parameters:
    - id: clock
      type: NodaTime.IClock
      description: Clock to use in the returned object.
    return:
      type: NodaTime.ZonedClock
      description: >-
        A <code>ZonedClock</code> in the system default time zone (using TZDB) and the ISO calendar system,

        using the system clock.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function InTzdbSystemDefaultZone(clock As IClock) As ZonedClock
  overload: NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone*
  exceptions:
  - type: NodaTime.TimeZones.DateTimeZoneNotFoundException
    commentId: T:NodaTime.TimeZones.DateTimeZoneNotFoundException
    description: >-
      The system default time zone is not mapped by

      TZDB.
  seealso:
  - linkId: NodaTime.DateTimeZoneProviders.Tzdb
    commentId: P:NodaTime.DateTimeZoneProviders.Tzdb
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone(NodaTime.IClock)
  commentId: M:NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone(NodaTime.IClock)
  id: InBclSystemDefaultZone(NodaTime.IClock)
  isExtensionMethod: true
  parent: NodaTime.Extensions.ClockExtensions
  langs:
  - csharp
  - vb
  name: InBclSystemDefaultZone(IClock)
  nameWithType: ClockExtensions.InBclSystemDefaultZone(IClock)
  fullName: NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone(NodaTime.IClock)
  type: Method
  source:
    remote:
      path: 2.4.x/src/NodaTime/Extensions/ClockExtensions.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: InBclSystemDefaultZone
    path: src/NodaTime/Extensions/ClockExtensions.cs
    startLine: 76
  assemblies:
  - NodaTime
  namespace: NodaTime.Extensions
  summary: "\nConstructs a <xref href=\"NodaTime.ZonedClock\" data-throw-if-not-resolved=\"false\"></xref> from a clock (the target of the method), in the wrapper for the\nBCL system default time zone time zone and the ISO calendar system.\n"
  remarks: The <code>DateTimeZone</code> used is a wrapper for <xref href="System.TimeZoneInfo.Local" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static ZonedClock InBclSystemDefaultZone(this IClock clock)
    parameters:
    - id: clock
      type: NodaTime.IClock
      description: Clock to use in the returned object.
    return:
      type: NodaTime.ZonedClock
      description: >-
        A <code>ZonedClock</code> in the system default time zone and the ISO calendar system,

        using the system clock.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function InBclSystemDefaultZone(clock As IClock) As ZonedClock
  overload: NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone*
  seealso:
  - linkId: NodaTime.DateTimeZoneProviders.Bcl
    commentId: P:NodaTime.DateTimeZoneProviders.Bcl
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: NodaTime.IClock
  commentId: T:NodaTime.IClock
  parent: NodaTime
  name: IClock
  nameWithType: IClock
  fullName: NodaTime.IClock
- uid: NodaTime.Extensions
  commentId: N:NodaTime.Extensions
  name: NodaTime.Extensions
  nameWithType: NodaTime.Extensions
  fullName: NodaTime.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NodaTime
  commentId: N:NodaTime
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NodaTime.ZonedClock
  commentId: T:NodaTime.ZonedClock
  parent: NodaTime
  name: ZonedClock
  nameWithType: ZonedClock
  fullName: NodaTime.ZonedClock
- uid: NodaTime.Extensions.ClockExtensions.InZone*
  commentId: Overload:NodaTime.Extensions.ClockExtensions.InZone
  name: InZone
  nameWithType: ClockExtensions.InZone
  fullName: NodaTime.Extensions.ClockExtensions.InZone
- uid: NodaTime.DateTimeZone
  commentId: T:NodaTime.DateTimeZone
  parent: NodaTime
  name: DateTimeZone
  nameWithType: DateTimeZone
  fullName: NodaTime.DateTimeZone
- uid: NodaTime.CalendarSystem
  commentId: T:NodaTime.CalendarSystem
  parent: NodaTime
  name: CalendarSystem
  nameWithType: CalendarSystem
  fullName: NodaTime.CalendarSystem
- uid: NodaTime.Extensions.ClockExtensions.InUtc*
  commentId: Overload:NodaTime.Extensions.ClockExtensions.InUtc
  name: InUtc
  nameWithType: ClockExtensions.InUtc
  fullName: NodaTime.Extensions.ClockExtensions.InUtc
- uid: NodaTime.DateTimeZoneProviders.Tzdb
  commentId: P:NodaTime.DateTimeZoneProviders.Tzdb
  isExternal: true
- uid: NodaTime.TimeZones.DateTimeZoneNotFoundException
  commentId: T:NodaTime.TimeZones.DateTimeZoneNotFoundException
  name: DateTimeZoneNotFoundException
  nameWithType: DateTimeZoneNotFoundException
  fullName: NodaTime.TimeZones.DateTimeZoneNotFoundException
- uid: NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone*
  commentId: Overload:NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone
  name: InTzdbSystemDefaultZone
  nameWithType: ClockExtensions.InTzdbSystemDefaultZone
  fullName: NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone
- uid: System.TimeZoneInfo.Local
  commentId: P:System.TimeZoneInfo.Local
  isExternal: true
- uid: NodaTime.DateTimeZoneProviders.Bcl
  commentId: P:NodaTime.DateTimeZoneProviders.Bcl
  isExternal: true
- uid: NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone*
  commentId: Overload:NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone
  name: InBclSystemDefaultZone
  nameWithType: ClockExtensions.InBclSystemDefaultZone
  fullName: NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone
shouldSkipMarkup: true
