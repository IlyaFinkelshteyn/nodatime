### YamlMime:TableOfContent
- uid: NodaTime
  name: NodaTime
  items:
  - uid: NodaTime.AmbiguousTimeException
    name: AmbiguousTimeException
  - uid: NodaTime.AnnualDate
    name: AnnualDate
  - uid: NodaTime.CalendarSystem
    name: CalendarSystem
  - uid: NodaTime.DateAdjusters
    name: DateAdjusters
  - uid: NodaTime.DateInterval
    name: DateInterval
  - uid: NodaTime.DateTimeZone
    name: DateTimeZone
  - uid: NodaTime.DateTimeZoneProviders
    name: DateTimeZoneProviders
  - uid: NodaTime.Duration
    name: Duration
  - uid: NodaTime.IClock
    name: IClock
  - uid: NodaTime.IDateTimeZoneProvider
    name: IDateTimeZoneProvider
  - uid: NodaTime.Instant
    name: Instant
  - uid: NodaTime.Interval
    name: Interval
  - uid: NodaTime.IsoDayOfWeek
    name: IsoDayOfWeek
  - uid: NodaTime.LocalDate
    name: LocalDate
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
  - uid: NodaTime.LocalTime
    name: LocalTime
  - uid: NodaTime.NodaConstants
    name: NodaConstants
  - uid: NodaTime.Offset
    name: Offset
  - uid: NodaTime.OffsetDate
    name: OffsetDate
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
  - uid: NodaTime.OffsetDateTime.Comparer
    name: OffsetDateTime.Comparer
  - uid: NodaTime.OffsetTime
    name: OffsetTime
  - uid: NodaTime.Period
    name: Period
  - uid: NodaTime.PeriodBuilder
    name: PeriodBuilder
  - uid: NodaTime.PeriodUnits
    name: PeriodUnits
  - uid: NodaTime.SkippedTimeException
    name: SkippedTimeException
  - uid: NodaTime.SystemClock
    name: SystemClock
  - uid: NodaTime.TimeAdjusters
    name: TimeAdjusters
  - uid: NodaTime.ZonedClock
    name: ZonedClock
  - uid: NodaTime.ZonedDateTime
    name: ZonedDateTime
  - uid: NodaTime.ZonedDateTime.Comparer
    name: ZonedDateTime.Comparer
- uid: NodaTime.Calendars
  name: NodaTime.Calendars
  items:
  - uid: NodaTime.Calendars.Era
    name: Era
  - uid: NodaTime.Calendars.HebrewMonthNumbering
    name: HebrewMonthNumbering
  - uid: NodaTime.Calendars.IslamicEpoch
    name: IslamicEpoch
  - uid: NodaTime.Calendars.IslamicLeapYearPattern
    name: IslamicLeapYearPattern
  - uid: NodaTime.Calendars.IWeekYearRule
    name: IWeekYearRule
  - uid: NodaTime.Calendars.WeekYearRuleExtensions
    name: WeekYearRuleExtensions
  - uid: NodaTime.Calendars.WeekYearRules
    name: WeekYearRules
- uid: NodaTime.Extensions
  name: NodaTime.Extensions
  items:
  - uid: NodaTime.Extensions.ClockExtensions
    name: ClockExtensions
  - uid: NodaTime.Extensions.DateTimeExtensions
    name: DateTimeExtensions
  - uid: NodaTime.Extensions.DateTimeOffsetExtensions
    name: DateTimeOffsetExtensions
  - uid: NodaTime.Extensions.DateTimeZoneProviderExtensions
    name: DateTimeZoneProviderExtensions
  - uid: NodaTime.Extensions.DayOfWeekExtensions
    name: DayOfWeekExtensions
  - uid: NodaTime.Extensions.IsoDayOfWeekExtensions
    name: IsoDayOfWeekExtensions
  - uid: NodaTime.Extensions.StopwatchExtensions
    name: StopwatchExtensions
  - uid: NodaTime.Extensions.TimeSpanExtensions
    name: TimeSpanExtensions
- uid: NodaTime.Serialization.JsonNet
  name: NodaTime.Serialization.JsonNet
  items:
  - uid: NodaTime.Serialization.JsonNet.DelegatingConverterBase
    name: DelegatingConverterBase
  - uid: NodaTime.Serialization.JsonNet.Extensions
    name: Extensions
  - uid: NodaTime.Serialization.JsonNet.NodaConverterBase`1
    name: NodaConverterBase<T>
    name.vb: NodaConverterBase(Of T)
  - uid: NodaTime.Serialization.JsonNet.NodaConverters
    name: NodaConverters
  - uid: NodaTime.Serialization.JsonNet.NodaPatternConverter`1
    name: NodaPatternConverter<T>
    name.vb: NodaPatternConverter(Of T)
- uid: NodaTime.Testing
  name: NodaTime.Testing
  items:
  - uid: NodaTime.Testing.FakeClock
    name: FakeClock
- uid: NodaTime.Testing.Extensions
  name: NodaTime.Testing.Extensions
  items:
  - uid: NodaTime.Testing.Extensions.DurationConstruction
    name: DurationConstruction
  - uid: NodaTime.Testing.Extensions.LocalDateConstruction
    name: LocalDateConstruction
- uid: NodaTime.Testing.TimeZones
  name: NodaTime.Testing.TimeZones
  items:
  - uid: NodaTime.Testing.TimeZones.FakeDateTimeZoneSource
    name: FakeDateTimeZoneSource
  - uid: NodaTime.Testing.TimeZones.FakeDateTimeZoneSource.Builder
    name: FakeDateTimeZoneSource.Builder
  - uid: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone
    name: MultiTransitionDateTimeZone
  - uid: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder
    name: MultiTransitionDateTimeZone.Builder
  - uid: NodaTime.Testing.TimeZones.SingleTransitionDateTimeZone
    name: SingleTransitionDateTimeZone
- uid: NodaTime.Text
  name: NodaTime.Text
  items:
  - uid: NodaTime.Text.AnnualDatePattern
    name: AnnualDatePattern
  - uid: NodaTime.Text.CompositePatternBuilder`1
    name: CompositePatternBuilder<T>
    name.vb: CompositePatternBuilder(Of T)
  - uid: NodaTime.Text.DurationPattern
    name: DurationPattern
  - uid: NodaTime.Text.InstantPattern
    name: InstantPattern
  - uid: NodaTime.Text.InvalidPatternException
    name: InvalidPatternException
  - uid: NodaTime.Text.IPattern`1
    name: IPattern<T>
    name.vb: IPattern(Of T)
  - uid: NodaTime.Text.LocalDatePattern
    name: LocalDatePattern
  - uid: NodaTime.Text.LocalDateTimePattern
    name: LocalDateTimePattern
  - uid: NodaTime.Text.LocalTimePattern
    name: LocalTimePattern
  - uid: NodaTime.Text.OffsetDatePattern
    name: OffsetDatePattern
  - uid: NodaTime.Text.OffsetDateTimePattern
    name: OffsetDateTimePattern
  - uid: NodaTime.Text.OffsetPattern
    name: OffsetPattern
  - uid: NodaTime.Text.OffsetTimePattern
    name: OffsetTimePattern
  - uid: NodaTime.Text.ParseResult`1
    name: ParseResult<T>
    name.vb: ParseResult(Of T)
  - uid: NodaTime.Text.PeriodPattern
    name: PeriodPattern
  - uid: NodaTime.Text.UnparsableValueException
    name: UnparsableValueException
  - uid: NodaTime.Text.ZonedDateTimePattern
    name: ZonedDateTimePattern
- uid: NodaTime.TimeZones
  name: NodaTime.TimeZones
  items:
  - uid: NodaTime.TimeZones.AmbiguousTimeResolver
    name: AmbiguousTimeResolver
  - uid: NodaTime.TimeZones.BclDateTimeZone
    name: BclDateTimeZone
  - uid: NodaTime.TimeZones.BclDateTimeZoneSource
    name: BclDateTimeZoneSource
  - uid: NodaTime.TimeZones.DateTimeZoneCache
    name: DateTimeZoneCache
  - uid: NodaTime.TimeZones.DateTimeZoneNotFoundException
    name: DateTimeZoneNotFoundException
  - uid: NodaTime.TimeZones.IDateTimeZoneSource
    name: IDateTimeZoneSource
  - uid: NodaTime.TimeZones.InvalidDateTimeZoneSourceException
    name: InvalidDateTimeZoneSourceException
  - uid: NodaTime.TimeZones.Resolvers
    name: Resolvers
  - uid: NodaTime.TimeZones.SkippedTimeResolver
    name: SkippedTimeResolver
  - uid: NodaTime.TimeZones.TzdbDateTimeZoneSource
    name: TzdbDateTimeZoneSource
  - uid: NodaTime.TimeZones.TzdbZone1970Location
    name: TzdbZone1970Location
  - uid: NodaTime.TimeZones.TzdbZone1970Location.Country
    name: TzdbZone1970Location.Country
  - uid: NodaTime.TimeZones.TzdbZoneLocation
    name: TzdbZoneLocation
  - uid: NodaTime.TimeZones.ZoneEqualityComparer
    name: ZoneEqualityComparer
  - uid: NodaTime.TimeZones.ZoneEqualityComparer.Options
    name: ZoneEqualityComparer.Options
  - uid: NodaTime.TimeZones.ZoneInterval
    name: ZoneInterval
  - uid: NodaTime.TimeZones.ZoneLocalMapping
    name: ZoneLocalMapping
  - uid: NodaTime.TimeZones.ZoneLocalMappingResolver
    name: ZoneLocalMappingResolver
- uid: NodaTime.TimeZones.Cldr
  name: NodaTime.TimeZones.Cldr
  items:
  - uid: NodaTime.TimeZones.Cldr.MapZone
    name: MapZone
  - uid: NodaTime.TimeZones.Cldr.WindowsZones
    name: WindowsZones
- uid: NodaTime.Utility
  name: NodaTime.Utility
  items:
  - uid: NodaTime.Utility.BclConversions
    name: BclConversions
  - uid: NodaTime.Utility.InvalidNodaDataException
    name: InvalidNodaDataException
