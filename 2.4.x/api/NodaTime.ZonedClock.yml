### YamlMime:ManagedReference
items:
- uid: NodaTime.ZonedClock
  commentId: T:NodaTime.ZonedClock
  id: ZonedClock
  parent: NodaTime
  children:
  - NodaTime.ZonedClock.#ctor(NodaTime.IClock,NodaTime.DateTimeZone,NodaTime.CalendarSystem)
  - NodaTime.ZonedClock.GetCurrentDate
  - NodaTime.ZonedClock.GetCurrentInstant
  - NodaTime.ZonedClock.GetCurrentLocalDateTime
  - NodaTime.ZonedClock.GetCurrentOffsetDateTime
  - NodaTime.ZonedClock.GetCurrentTimeOfDay
  - NodaTime.ZonedClock.GetCurrentZonedDateTime
  langs:
  - csharp
  - vb
  name: ZonedClock
  nameWithType: ZonedClock
  fullName: NodaTime.ZonedClock
  type: Class
  source:
    remote:
      path: 2.4.x/src/NodaTime/ZonedClock.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: ZonedClock
    path: src/NodaTime/ZonedClock.cs
    startLine: 14
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nA clock with an associated time zone and calendar. This is effectively a convenience\nclass decorating an <xref href=\"NodaTime.IClock\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public sealed class ZonedClock : IClock'
    content.vb: >-
      Public NotInheritable Class ZonedClock
          Implements IClock
  inheritance:
  - System.Object
  implements:
  - NodaTime.IClock
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - NodaTime.IClock.NodaTime.Extensions.ClockExtensions.InZone(NodaTime.DateTimeZone)
  - NodaTime.IClock.NodaTime.Extensions.ClockExtensions.InZone(NodaTime.DateTimeZone,NodaTime.CalendarSystem)
  - NodaTime.IClock.NodaTime.Extensions.ClockExtensions.InUtc
  - NodaTime.IClock.NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone
  - NodaTime.IClock.NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: NodaTime.ZonedClock.#ctor(NodaTime.IClock,NodaTime.DateTimeZone,NodaTime.CalendarSystem)
  commentId: M:NodaTime.ZonedClock.#ctor(NodaTime.IClock,NodaTime.DateTimeZone,NodaTime.CalendarSystem)
  id: '#ctor(NodaTime.IClock,NodaTime.DateTimeZone,NodaTime.CalendarSystem)'
  parent: NodaTime.ZonedClock
  langs:
  - csharp
  - vb
  name: ZonedClock(IClock, DateTimeZone, CalendarSystem)
  nameWithType: ZonedClock.ZonedClock(IClock, DateTimeZone, CalendarSystem)
  fullName: NodaTime.ZonedClock.ZonedClock(NodaTime.IClock, NodaTime.DateTimeZone, NodaTime.CalendarSystem)
  type: Constructor
  source:
    remote:
      path: 2.4.x/src/NodaTime/ZonedClock.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: .ctor
    path: src/NodaTime/ZonedClock.cs
    startLine: 27
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nCreates a new <xref href=\"NodaTime.ZonedClock\" data-throw-if-not-resolved=\"false\"></xref> with the given clock, time zone and calendar system.\n"
  example: []
  syntax:
    content: public ZonedClock(IClock clock, DateTimeZone zone, CalendarSystem calendar)
    parameters:
    - id: clock
      type: NodaTime.IClock
      description: Clock to use to obtain instants.
    - id: zone
      type: NodaTime.DateTimeZone
      description: Time zone to adjust instants into.
    - id: calendar
      type: NodaTime.CalendarSystem
      description: Calendar system to use.
    content.vb: Public Sub New(clock As IClock, zone As DateTimeZone, calendar As CalendarSystem)
  overload: NodaTime.ZonedClock.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NodaTime.ZonedClock.GetCurrentInstant
  commentId: M:NodaTime.ZonedClock.GetCurrentInstant
  id: GetCurrentInstant
  parent: NodaTime.ZonedClock
  langs:
  - csharp
  - vb
  name: GetCurrentInstant()
  nameWithType: ZonedClock.GetCurrentInstant()
  fullName: NodaTime.ZonedClock.GetCurrentInstant()
  type: Method
  source:
    remote:
      path: 2.4.x/src/NodaTime/ZonedClock.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: GetCurrentInstant
    path: src/NodaTime/ZonedClock.cs
    startLine: 38
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nReturns the current instant provided by the underlying clock.\n"
  example: []
  syntax:
    content: public Instant GetCurrentInstant()
    return:
      type: NodaTime.Instant
      description: The current instant provided by the underlying clock.
    content.vb: Public Function GetCurrentInstant As Instant
  overload: NodaTime.ZonedClock.GetCurrentInstant*
  implements:
  - NodaTime.IClock.GetCurrentInstant
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NodaTime.ZonedClock.GetCurrentZonedDateTime
  commentId: M:NodaTime.ZonedClock.GetCurrentZonedDateTime
  id: GetCurrentZonedDateTime
  parent: NodaTime.ZonedClock
  langs:
  - csharp
  - vb
  name: GetCurrentZonedDateTime()
  nameWithType: ZonedClock.GetCurrentZonedDateTime()
  fullName: NodaTime.ZonedClock.GetCurrentZonedDateTime()
  type: Method
  source:
    remote:
      path: 2.4.x/src/NodaTime/ZonedClock.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: GetCurrentZonedDateTime
    path: src/NodaTime/ZonedClock.cs
    startLine: 46
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nReturns the current instant provided by the underlying clock, adjusted\nto the time zone of this object.\n"
  example: []
  syntax:
    content: public ZonedDateTime GetCurrentZonedDateTime()
    return:
      type: NodaTime.ZonedDateTime
      description: >-
        The current instant provided by the underlying clock, adjusted to the

        time zone of this object.
    content.vb: Public Function GetCurrentZonedDateTime As ZonedDateTime
  overload: NodaTime.ZonedClock.GetCurrentZonedDateTime*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NodaTime.ZonedClock.GetCurrentLocalDateTime
  commentId: M:NodaTime.ZonedClock.GetCurrentLocalDateTime
  id: GetCurrentLocalDateTime
  parent: NodaTime.ZonedClock
  langs:
  - csharp
  - vb
  name: GetCurrentLocalDateTime()
  nameWithType: ZonedClock.GetCurrentLocalDateTime()
  fullName: NodaTime.ZonedClock.GetCurrentLocalDateTime()
  type: Method
  source:
    remote:
      path: 2.4.x/src/NodaTime/ZonedClock.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: GetCurrentLocalDateTime
    path: src/NodaTime/ZonedClock.cs
    startLine: 55
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nReturns the local date/time of the current instant provided by the underlying clock, adjusted\nto the time zone of this object.\n"
  example: []
  syntax:
    content: public LocalDateTime GetCurrentLocalDateTime()
    return:
      type: NodaTime.LocalDateTime
      description: >-
        The local date/time of the current instant provided by the underlying clock, adjusted to the

        time zone of this object.
    content.vb: Public Function GetCurrentLocalDateTime As LocalDateTime
  overload: NodaTime.ZonedClock.GetCurrentLocalDateTime*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NodaTime.ZonedClock.GetCurrentOffsetDateTime
  commentId: M:NodaTime.ZonedClock.GetCurrentOffsetDateTime
  id: GetCurrentOffsetDateTime
  parent: NodaTime.ZonedClock
  langs:
  - csharp
  - vb
  name: GetCurrentOffsetDateTime()
  nameWithType: ZonedClock.GetCurrentOffsetDateTime()
  fullName: NodaTime.ZonedClock.GetCurrentOffsetDateTime()
  type: Method
  source:
    remote:
      path: 2.4.x/src/NodaTime/ZonedClock.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: GetCurrentOffsetDateTime
    path: src/NodaTime/ZonedClock.cs
    startLine: 64
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nReturns the offset date/time of the current instant provided by the underlying clock, adjusted\nto the time zone of this object.\n"
  example: []
  syntax:
    content: public OffsetDateTime GetCurrentOffsetDateTime()
    return:
      type: NodaTime.OffsetDateTime
      description: >-
        The offset date/time of the current instant provided by the underlying clock, adjusted to the

        time zone of this object.
    content.vb: Public Function GetCurrentOffsetDateTime As OffsetDateTime
  overload: NodaTime.ZonedClock.GetCurrentOffsetDateTime*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NodaTime.ZonedClock.GetCurrentDate
  commentId: M:NodaTime.ZonedClock.GetCurrentDate
  id: GetCurrentDate
  parent: NodaTime.ZonedClock
  langs:
  - csharp
  - vb
  name: GetCurrentDate()
  nameWithType: ZonedClock.GetCurrentDate()
  fullName: NodaTime.ZonedClock.GetCurrentDate()
  type: Method
  source:
    remote:
      path: 2.4.x/src/NodaTime/ZonedClock.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: GetCurrentDate
    path: src/NodaTime/ZonedClock.cs
    startLine: 73
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nReturns the local date of the current instant provided by the underlying clock, adjusted\nto the time zone of this object.\n"
  example: []
  syntax:
    content: public LocalDate GetCurrentDate()
    return:
      type: NodaTime.LocalDate
      description: >-
        The local date of the current instant provided by the underlying clock, adjusted to the

        time zone of this object.
    content.vb: Public Function GetCurrentDate As LocalDate
  overload: NodaTime.ZonedClock.GetCurrentDate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NodaTime.ZonedClock.GetCurrentTimeOfDay
  commentId: M:NodaTime.ZonedClock.GetCurrentTimeOfDay
  id: GetCurrentTimeOfDay
  parent: NodaTime.ZonedClock
  langs:
  - csharp
  - vb
  name: GetCurrentTimeOfDay()
  nameWithType: ZonedClock.GetCurrentTimeOfDay()
  fullName: NodaTime.ZonedClock.GetCurrentTimeOfDay()
  type: Method
  source:
    remote:
      path: 2.4.x/src/NodaTime/ZonedClock.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: GetCurrentTimeOfDay
    path: src/NodaTime/ZonedClock.cs
    startLine: 82
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nReturns the local time of the current instant provided by the underlying clock, adjusted\nto the time zone of this object.\n"
  example: []
  syntax:
    content: public LocalTime GetCurrentTimeOfDay()
    return:
      type: NodaTime.LocalTime
      description: >-
        The local time of the current instant provided by the underlying clock, adjusted to the

        time zone of this object.
    content.vb: Public Function GetCurrentTimeOfDay As LocalTime
  overload: NodaTime.ZonedClock.GetCurrentTimeOfDay*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: NodaTime.IClock
  commentId: T:NodaTime.IClock
  parent: NodaTime
  name: IClock
  nameWithType: IClock
  fullName: NodaTime.IClock
- uid: NodaTime
  commentId: N:NodaTime
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NodaTime.IClock.NodaTime.Extensions.ClockExtensions.InZone(NodaTime.DateTimeZone)
  commentId: M:NodaTime.Extensions.ClockExtensions.InZone(NodaTime.IClock,NodaTime.DateTimeZone)
  parent: NodaTime.Extensions.ClockExtensions
  definition: NodaTime.Extensions.ClockExtensions.InZone(NodaTime.IClock,NodaTime.DateTimeZone)
  name: InZone(DateTimeZone)
  nameWithType: ClockExtensions.InZone(DateTimeZone)
  fullName: NodaTime.Extensions.ClockExtensions.InZone(NodaTime.DateTimeZone)
  spec.csharp:
  - uid: NodaTime.Extensions.ClockExtensions.InZone(NodaTime.DateTimeZone)
    name: InZone
    nameWithType: ClockExtensions.InZone
    fullName: NodaTime.Extensions.ClockExtensions.InZone
  - name: (
    nameWithType: (
    fullName: (
  - uid: NodaTime.DateTimeZone
    name: DateTimeZone
    nameWithType: DateTimeZone
    fullName: NodaTime.DateTimeZone
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NodaTime.Extensions.ClockExtensions.InZone(NodaTime.DateTimeZone)
    name: InZone
    nameWithType: ClockExtensions.InZone
    fullName: NodaTime.Extensions.ClockExtensions.InZone
  - name: (
    nameWithType: (
    fullName: (
  - uid: NodaTime.DateTimeZone
    name: DateTimeZone
    nameWithType: DateTimeZone
    fullName: NodaTime.DateTimeZone
  - name: )
    nameWithType: )
    fullName: )
- uid: NodaTime.IClock.NodaTime.Extensions.ClockExtensions.InZone(NodaTime.DateTimeZone,NodaTime.CalendarSystem)
  commentId: M:NodaTime.Extensions.ClockExtensions.InZone(NodaTime.IClock,NodaTime.DateTimeZone,NodaTime.CalendarSystem)
  parent: NodaTime.Extensions.ClockExtensions
  definition: NodaTime.Extensions.ClockExtensions.InZone(NodaTime.IClock,NodaTime.DateTimeZone,NodaTime.CalendarSystem)
  name: InZone(DateTimeZone, CalendarSystem)
  nameWithType: ClockExtensions.InZone(DateTimeZone, CalendarSystem)
  fullName: NodaTime.Extensions.ClockExtensions.InZone(NodaTime.DateTimeZone, NodaTime.CalendarSystem)
  spec.csharp:
  - uid: NodaTime.Extensions.ClockExtensions.InZone(NodaTime.DateTimeZone,NodaTime.CalendarSystem)
    name: InZone
    nameWithType: ClockExtensions.InZone
    fullName: NodaTime.Extensions.ClockExtensions.InZone
  - name: (
    nameWithType: (
    fullName: (
  - uid: NodaTime.DateTimeZone
    name: DateTimeZone
    nameWithType: DateTimeZone
    fullName: NodaTime.DateTimeZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NodaTime.CalendarSystem
    name: CalendarSystem
    nameWithType: CalendarSystem
    fullName: NodaTime.CalendarSystem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NodaTime.Extensions.ClockExtensions.InZone(NodaTime.DateTimeZone,NodaTime.CalendarSystem)
    name: InZone
    nameWithType: ClockExtensions.InZone
    fullName: NodaTime.Extensions.ClockExtensions.InZone
  - name: (
    nameWithType: (
    fullName: (
  - uid: NodaTime.DateTimeZone
    name: DateTimeZone
    nameWithType: DateTimeZone
    fullName: NodaTime.DateTimeZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NodaTime.CalendarSystem
    name: CalendarSystem
    nameWithType: CalendarSystem
    fullName: NodaTime.CalendarSystem
  - name: )
    nameWithType: )
    fullName: )
- uid: NodaTime.IClock.NodaTime.Extensions.ClockExtensions.InUtc
  commentId: M:NodaTime.Extensions.ClockExtensions.InUtc(NodaTime.IClock)
  parent: NodaTime.Extensions.ClockExtensions
  definition: NodaTime.Extensions.ClockExtensions.InUtc(NodaTime.IClock)
  name: InUtc()
  nameWithType: ClockExtensions.InUtc()
  fullName: NodaTime.Extensions.ClockExtensions.InUtc()
  spec.csharp:
  - uid: NodaTime.Extensions.ClockExtensions.InUtc
    name: InUtc
    nameWithType: ClockExtensions.InUtc
    fullName: NodaTime.Extensions.ClockExtensions.InUtc
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NodaTime.Extensions.ClockExtensions.InUtc
    name: InUtc
    nameWithType: ClockExtensions.InUtc
    fullName: NodaTime.Extensions.ClockExtensions.InUtc
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NodaTime.IClock.NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone
  commentId: M:NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone(NodaTime.IClock)
  parent: NodaTime.Extensions.ClockExtensions
  definition: NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone(NodaTime.IClock)
  name: InTzdbSystemDefaultZone()
  nameWithType: ClockExtensions.InTzdbSystemDefaultZone()
  fullName: NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone()
  spec.csharp:
  - uid: NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone
    name: InTzdbSystemDefaultZone
    nameWithType: ClockExtensions.InTzdbSystemDefaultZone
    fullName: NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone
    name: InTzdbSystemDefaultZone
    nameWithType: ClockExtensions.InTzdbSystemDefaultZone
    fullName: NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NodaTime.IClock.NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone
  commentId: M:NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone(NodaTime.IClock)
  parent: NodaTime.Extensions.ClockExtensions
  definition: NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone(NodaTime.IClock)
  name: InBclSystemDefaultZone()
  nameWithType: ClockExtensions.InBclSystemDefaultZone()
  fullName: NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone()
  spec.csharp:
  - uid: NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone
    name: InBclSystemDefaultZone
    nameWithType: ClockExtensions.InBclSystemDefaultZone
    fullName: NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone
    name: InBclSystemDefaultZone
    nameWithType: ClockExtensions.InBclSystemDefaultZone
    fullName: NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NodaTime.Extensions.ClockExtensions.InZone(NodaTime.IClock,NodaTime.DateTimeZone)
  commentId: M:NodaTime.Extensions.ClockExtensions.InZone(NodaTime.IClock,NodaTime.DateTimeZone)
  name: InZone(IClock, DateTimeZone)
  nameWithType: ClockExtensions.InZone(IClock, DateTimeZone)
  fullName: NodaTime.Extensions.ClockExtensions.InZone(NodaTime.IClock, NodaTime.DateTimeZone)
  spec.csharp:
  - uid: NodaTime.Extensions.ClockExtensions.InZone(NodaTime.IClock,NodaTime.DateTimeZone)
    name: InZone
    nameWithType: ClockExtensions.InZone
    fullName: NodaTime.Extensions.ClockExtensions.InZone
  - name: (
    nameWithType: (
    fullName: (
  - uid: NodaTime.IClock
    name: IClock
    nameWithType: IClock
    fullName: NodaTime.IClock
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NodaTime.DateTimeZone
    name: DateTimeZone
    nameWithType: DateTimeZone
    fullName: NodaTime.DateTimeZone
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NodaTime.Extensions.ClockExtensions.InZone(NodaTime.IClock,NodaTime.DateTimeZone)
    name: InZone
    nameWithType: ClockExtensions.InZone
    fullName: NodaTime.Extensions.ClockExtensions.InZone
  - name: (
    nameWithType: (
    fullName: (
  - uid: NodaTime.IClock
    name: IClock
    nameWithType: IClock
    fullName: NodaTime.IClock
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NodaTime.DateTimeZone
    name: DateTimeZone
    nameWithType: DateTimeZone
    fullName: NodaTime.DateTimeZone
  - name: )
    nameWithType: )
    fullName: )
- uid: NodaTime.Extensions.ClockExtensions
  commentId: T:NodaTime.Extensions.ClockExtensions
  parent: NodaTime.Extensions
  name: ClockExtensions
  nameWithType: ClockExtensions
  fullName: NodaTime.Extensions.ClockExtensions
- uid: NodaTime.Extensions.ClockExtensions.InZone(NodaTime.IClock,NodaTime.DateTimeZone,NodaTime.CalendarSystem)
  commentId: M:NodaTime.Extensions.ClockExtensions.InZone(NodaTime.IClock,NodaTime.DateTimeZone,NodaTime.CalendarSystem)
  name: InZone(IClock, DateTimeZone, CalendarSystem)
  nameWithType: ClockExtensions.InZone(IClock, DateTimeZone, CalendarSystem)
  fullName: NodaTime.Extensions.ClockExtensions.InZone(NodaTime.IClock, NodaTime.DateTimeZone, NodaTime.CalendarSystem)
  spec.csharp:
  - uid: NodaTime.Extensions.ClockExtensions.InZone(NodaTime.IClock,NodaTime.DateTimeZone,NodaTime.CalendarSystem)
    name: InZone
    nameWithType: ClockExtensions.InZone
    fullName: NodaTime.Extensions.ClockExtensions.InZone
  - name: (
    nameWithType: (
    fullName: (
  - uid: NodaTime.IClock
    name: IClock
    nameWithType: IClock
    fullName: NodaTime.IClock
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NodaTime.DateTimeZone
    name: DateTimeZone
    nameWithType: DateTimeZone
    fullName: NodaTime.DateTimeZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NodaTime.CalendarSystem
    name: CalendarSystem
    nameWithType: CalendarSystem
    fullName: NodaTime.CalendarSystem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NodaTime.Extensions.ClockExtensions.InZone(NodaTime.IClock,NodaTime.DateTimeZone,NodaTime.CalendarSystem)
    name: InZone
    nameWithType: ClockExtensions.InZone
    fullName: NodaTime.Extensions.ClockExtensions.InZone
  - name: (
    nameWithType: (
    fullName: (
  - uid: NodaTime.IClock
    name: IClock
    nameWithType: IClock
    fullName: NodaTime.IClock
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NodaTime.DateTimeZone
    name: DateTimeZone
    nameWithType: DateTimeZone
    fullName: NodaTime.DateTimeZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NodaTime.CalendarSystem
    name: CalendarSystem
    nameWithType: CalendarSystem
    fullName: NodaTime.CalendarSystem
  - name: )
    nameWithType: )
    fullName: )
- uid: NodaTime.Extensions.ClockExtensions.InUtc(NodaTime.IClock)
  commentId: M:NodaTime.Extensions.ClockExtensions.InUtc(NodaTime.IClock)
  name: InUtc(IClock)
  nameWithType: ClockExtensions.InUtc(IClock)
  fullName: NodaTime.Extensions.ClockExtensions.InUtc(NodaTime.IClock)
  spec.csharp:
  - uid: NodaTime.Extensions.ClockExtensions.InUtc(NodaTime.IClock)
    name: InUtc
    nameWithType: ClockExtensions.InUtc
    fullName: NodaTime.Extensions.ClockExtensions.InUtc
  - name: (
    nameWithType: (
    fullName: (
  - uid: NodaTime.IClock
    name: IClock
    nameWithType: IClock
    fullName: NodaTime.IClock
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NodaTime.Extensions.ClockExtensions.InUtc(NodaTime.IClock)
    name: InUtc
    nameWithType: ClockExtensions.InUtc
    fullName: NodaTime.Extensions.ClockExtensions.InUtc
  - name: (
    nameWithType: (
    fullName: (
  - uid: NodaTime.IClock
    name: IClock
    nameWithType: IClock
    fullName: NodaTime.IClock
  - name: )
    nameWithType: )
    fullName: )
- uid: NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone(NodaTime.IClock)
  commentId: M:NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone(NodaTime.IClock)
  name: InTzdbSystemDefaultZone(IClock)
  nameWithType: ClockExtensions.InTzdbSystemDefaultZone(IClock)
  fullName: NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone(NodaTime.IClock)
  spec.csharp:
  - uid: NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone(NodaTime.IClock)
    name: InTzdbSystemDefaultZone
    nameWithType: ClockExtensions.InTzdbSystemDefaultZone
    fullName: NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone
  - name: (
    nameWithType: (
    fullName: (
  - uid: NodaTime.IClock
    name: IClock
    nameWithType: IClock
    fullName: NodaTime.IClock
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone(NodaTime.IClock)
    name: InTzdbSystemDefaultZone
    nameWithType: ClockExtensions.InTzdbSystemDefaultZone
    fullName: NodaTime.Extensions.ClockExtensions.InTzdbSystemDefaultZone
  - name: (
    nameWithType: (
    fullName: (
  - uid: NodaTime.IClock
    name: IClock
    nameWithType: IClock
    fullName: NodaTime.IClock
  - name: )
    nameWithType: )
    fullName: )
- uid: NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone(NodaTime.IClock)
  commentId: M:NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone(NodaTime.IClock)
  name: InBclSystemDefaultZone(IClock)
  nameWithType: ClockExtensions.InBclSystemDefaultZone(IClock)
  fullName: NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone(NodaTime.IClock)
  spec.csharp:
  - uid: NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone(NodaTime.IClock)
    name: InBclSystemDefaultZone
    nameWithType: ClockExtensions.InBclSystemDefaultZone
    fullName: NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone
  - name: (
    nameWithType: (
    fullName: (
  - uid: NodaTime.IClock
    name: IClock
    nameWithType: IClock
    fullName: NodaTime.IClock
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone(NodaTime.IClock)
    name: InBclSystemDefaultZone
    nameWithType: ClockExtensions.InBclSystemDefaultZone
    fullName: NodaTime.Extensions.ClockExtensions.InBclSystemDefaultZone
  - name: (
    nameWithType: (
    fullName: (
  - uid: NodaTime.IClock
    name: IClock
    nameWithType: IClock
    fullName: NodaTime.IClock
  - name: )
    nameWithType: )
    fullName: )
- uid: NodaTime.Extensions
  commentId: N:NodaTime.Extensions
  name: NodaTime.Extensions
  nameWithType: NodaTime.Extensions
  fullName: NodaTime.Extensions
- uid: NodaTime.ZonedClock
  commentId: T:NodaTime.ZonedClock
  parent: NodaTime
  name: ZonedClock
  nameWithType: ZonedClock
  fullName: NodaTime.ZonedClock
- uid: NodaTime.ZonedClock.#ctor*
  commentId: Overload:NodaTime.ZonedClock.#ctor
  name: ZonedClock
  nameWithType: ZonedClock.ZonedClock
  fullName: NodaTime.ZonedClock.ZonedClock
- uid: NodaTime.DateTimeZone
  commentId: T:NodaTime.DateTimeZone
  parent: NodaTime
  name: DateTimeZone
  nameWithType: DateTimeZone
  fullName: NodaTime.DateTimeZone
- uid: NodaTime.CalendarSystem
  commentId: T:NodaTime.CalendarSystem
  parent: NodaTime
  name: CalendarSystem
  nameWithType: CalendarSystem
  fullName: NodaTime.CalendarSystem
- uid: NodaTime.ZonedClock.GetCurrentInstant*
  commentId: Overload:NodaTime.ZonedClock.GetCurrentInstant
  name: GetCurrentInstant
  nameWithType: ZonedClock.GetCurrentInstant
  fullName: NodaTime.ZonedClock.GetCurrentInstant
- uid: NodaTime.IClock.GetCurrentInstant
  commentId: M:NodaTime.IClock.GetCurrentInstant
  parent: NodaTime.IClock
  name: GetCurrentInstant()
  nameWithType: IClock.GetCurrentInstant()
  fullName: NodaTime.IClock.GetCurrentInstant()
  spec.csharp:
  - uid: NodaTime.IClock.GetCurrentInstant
    name: GetCurrentInstant
    nameWithType: IClock.GetCurrentInstant
    fullName: NodaTime.IClock.GetCurrentInstant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NodaTime.IClock.GetCurrentInstant
    name: GetCurrentInstant
    nameWithType: IClock.GetCurrentInstant
    fullName: NodaTime.IClock.GetCurrentInstant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NodaTime.Instant
  commentId: T:NodaTime.Instant
  parent: NodaTime
  name: Instant
  nameWithType: Instant
  fullName: NodaTime.Instant
- uid: NodaTime.ZonedClock.GetCurrentZonedDateTime*
  commentId: Overload:NodaTime.ZonedClock.GetCurrentZonedDateTime
  name: GetCurrentZonedDateTime
  nameWithType: ZonedClock.GetCurrentZonedDateTime
  fullName: NodaTime.ZonedClock.GetCurrentZonedDateTime
- uid: NodaTime.ZonedDateTime
  commentId: T:NodaTime.ZonedDateTime
  parent: NodaTime
  name: ZonedDateTime
  nameWithType: ZonedDateTime
  fullName: NodaTime.ZonedDateTime
- uid: NodaTime.ZonedClock.GetCurrentLocalDateTime*
  commentId: Overload:NodaTime.ZonedClock.GetCurrentLocalDateTime
  name: GetCurrentLocalDateTime
  nameWithType: ZonedClock.GetCurrentLocalDateTime
  fullName: NodaTime.ZonedClock.GetCurrentLocalDateTime
- uid: NodaTime.LocalDateTime
  commentId: T:NodaTime.LocalDateTime
  parent: NodaTime
  name: LocalDateTime
  nameWithType: LocalDateTime
  fullName: NodaTime.LocalDateTime
- uid: NodaTime.ZonedClock.GetCurrentOffsetDateTime*
  commentId: Overload:NodaTime.ZonedClock.GetCurrentOffsetDateTime
  name: GetCurrentOffsetDateTime
  nameWithType: ZonedClock.GetCurrentOffsetDateTime
  fullName: NodaTime.ZonedClock.GetCurrentOffsetDateTime
- uid: NodaTime.OffsetDateTime
  commentId: T:NodaTime.OffsetDateTime
  parent: NodaTime
  name: OffsetDateTime
  nameWithType: OffsetDateTime
  fullName: NodaTime.OffsetDateTime
- uid: NodaTime.ZonedClock.GetCurrentDate*
  commentId: Overload:NodaTime.ZonedClock.GetCurrentDate
  name: GetCurrentDate
  nameWithType: ZonedClock.GetCurrentDate
  fullName: NodaTime.ZonedClock.GetCurrentDate
- uid: NodaTime.LocalDate
  commentId: T:NodaTime.LocalDate
  parent: NodaTime
  name: LocalDate
  nameWithType: LocalDate
  fullName: NodaTime.LocalDate
- uid: NodaTime.ZonedClock.GetCurrentTimeOfDay*
  commentId: Overload:NodaTime.ZonedClock.GetCurrentTimeOfDay
  name: GetCurrentTimeOfDay
  nameWithType: ZonedClock.GetCurrentTimeOfDay
  fullName: NodaTime.ZonedClock.GetCurrentTimeOfDay
- uid: NodaTime.LocalTime
  commentId: T:NodaTime.LocalTime
  parent: NodaTime
  name: LocalTime
  nameWithType: LocalTime
  fullName: NodaTime.LocalTime
shouldSkipMarkup: true
