### YamlMime:ManagedReference
items:
- uid: NodaTime.SkippedTimeException
  commentId: T:NodaTime.SkippedTimeException
  id: SkippedTimeException
  parent: NodaTime
  children:
  - NodaTime.SkippedTimeException.#ctor(NodaTime.LocalDateTime,NodaTime.DateTimeZone)
  - NodaTime.SkippedTimeException.LocalDateTime
  - NodaTime.SkippedTimeException.Zone
  langs:
  - csharp
  - vb
  name: SkippedTimeException
  nameWithType: SkippedTimeException
  fullName: NodaTime.SkippedTimeException
  type: Class
  source:
    remote:
      path: 2.4.x/src/NodaTime/SkippedTimeException.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: SkippedTimeException
    path: src/NodaTime/SkippedTimeException.cs
    startLine: 37
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nException thrown to indicate that the specified local time doesn&apos;t\nexist in a particular time zone due to daylight saving time changes.    \n"
  remarks: "\n<p>\nThis normally occurs for spring transitions, where the clock goes forward\n(usually by an hour). For example, suppose the time zone goes forward\nat 2am, so the second after 01:59:59 becomes 03:00:00. In that case,\nlocal times such as 02:30:00 never occur.\n</p>\n<p>\nThis exception is used to indicate such problems, as they&apos;re usually\nnot the same as other <xref href=\"System.ArgumentOutOfRangeException\" data-throw-if-not-resolved=\"false\"></xref> causes,\nsuch as entering &quot;15&quot; for a month number.\n</p>\n<p>\nNote that it is possible (though extremely rare) for a whole day to be skipped due to a time zone transition,\nso this exception may also be thrown in cases where no local time is valid for a particular local date. (For\nexample, Samoa skipped December 30th 2011 entirely, transitioning from UTC-10 to UTC+14 at midnight.)\n</p>\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public sealed class SkippedTimeException : ArgumentOutOfRangeException, _Exception, ISerializable
    content.vb: >-
      <Serializable>

      Public NotInheritable Class SkippedTimeException
          Inherits ArgumentOutOfRangeException
          Implements _Exception, ISerializable
  inheritance:
  - System.Object
  - System.Exception
  - System.SystemException
  - System.ArgumentException
  - System.ArgumentOutOfRangeException
  implements:
  - System.Runtime.InteropServices._Exception
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.ArgumentOutOfRangeException.Message
  - System.ArgumentOutOfRangeException.ActualValue
  - System.ArgumentException.ParamName
  - System.Exception.GetBaseException
  - System.Exception.ToString
  - System.Exception.GetType
  - System.Exception.Data
  - System.Exception.InnerException
  - System.Exception.TargetSite
  - System.Exception.StackTrace
  - System.Exception.HelpLink
  - System.Exception.Source
  - System.Exception.HResult
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: NodaTime.SkippedTimeException.LocalDateTime
  commentId: P:NodaTime.SkippedTimeException.LocalDateTime
  id: LocalDateTime
  parent: NodaTime.SkippedTimeException
  langs:
  - csharp
  - vb
  name: LocalDateTime
  nameWithType: SkippedTimeException.LocalDateTime
  fullName: NodaTime.SkippedTimeException.LocalDateTime
  type: Property
  source:
    remote:
      path: 2.4.x/src/NodaTime/SkippedTimeException.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: LocalDateTime
    path: src/NodaTime/SkippedTimeException.cs
    startLine: 46
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nGets the local date/time which is invalid in the time zone, prompting this exception.\n"
  example: []
  syntax:
    content: public LocalDateTime LocalDateTime { get; }
    parameters: []
    return:
      type: NodaTime.LocalDateTime
      description: The local date/time which is invalid in the time zone.
    content.vb: Public ReadOnly Property LocalDateTime As LocalDateTime
  overload: NodaTime.SkippedTimeException.LocalDateTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NodaTime.SkippedTimeException.Zone
  commentId: P:NodaTime.SkippedTimeException.Zone
  id: Zone
  parent: NodaTime.SkippedTimeException
  langs:
  - csharp
  - vb
  name: Zone
  nameWithType: SkippedTimeException.Zone
  fullName: NodaTime.SkippedTimeException.Zone
  type: Property
  source:
    remote:
      path: 2.4.x/src/NodaTime/SkippedTimeException.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Zone
    path: src/NodaTime/SkippedTimeException.cs
    startLine: 52
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nGets the time zone in which the local date/time is invalid.\n"
  example: []
  syntax:
    content: public DateTimeZone Zone { get; }
    parameters: []
    return:
      type: NodaTime.DateTimeZone
      description: The time zone in which the local date/time is invalid
    content.vb: Public ReadOnly Property Zone As DateTimeZone
  overload: NodaTime.SkippedTimeException.Zone*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NodaTime.SkippedTimeException.#ctor(NodaTime.LocalDateTime,NodaTime.DateTimeZone)
  commentId: M:NodaTime.SkippedTimeException.#ctor(NodaTime.LocalDateTime,NodaTime.DateTimeZone)
  id: '#ctor(NodaTime.LocalDateTime,NodaTime.DateTimeZone)'
  parent: NodaTime.SkippedTimeException
  langs:
  - csharp
  - vb
  name: SkippedTimeException(LocalDateTime, DateTimeZone)
  nameWithType: SkippedTimeException.SkippedTimeException(LocalDateTime, DateTimeZone)
  fullName: NodaTime.SkippedTimeException.SkippedTimeException(NodaTime.LocalDateTime, NodaTime.DateTimeZone)
  type: Constructor
  source:
    remote:
      path: 2.4.x/src/NodaTime/SkippedTimeException.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: .ctor
    path: src/NodaTime/SkippedTimeException.cs
    startLine: 63
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nCreates a new instance for the given local date/time and time zone.\n"
  remarks: "\nUser code is unlikely to need to deliberately call this constructor except\npossibly for testing.\n"
  example: []
  syntax:
    content: public SkippedTimeException(LocalDateTime localDateTime, DateTimeZone zone)
    parameters:
    - id: localDateTime
      type: NodaTime.LocalDateTime
      description: The local date/time which is skipped in the specified time zone.
    - id: zone
      type: NodaTime.DateTimeZone
      description: The time zone in which the local date/time does not exist.
    content.vb: Public Sub New(localDateTime As LocalDateTime, zone As DateTimeZone)
  overload: NodaTime.SkippedTimeException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  parent: System
  isExternal: true
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: NodaTime
  commentId: N:NodaTime
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.SystemException
  commentId: T:System.SystemException
  parent: System
  isExternal: true
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: true
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Runtime.InteropServices._Exception
  commentId: T:System.Runtime.InteropServices._Exception
  parent: System.Runtime.InteropServices
  isExternal: true
  name: _Exception
  nameWithType: _Exception
  fullName: System.Runtime.InteropServices._Exception
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.ArgumentOutOfRangeException
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ArgumentOutOfRangeException.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ArgumentOutOfRangeException.GetObjectData
    fullName: System.ArgumentOutOfRangeException.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ArgumentOutOfRangeException.GetObjectData
    fullName: System.ArgumentOutOfRangeException.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentOutOfRangeException.Message
  commentId: P:System.ArgumentOutOfRangeException.Message
  parent: System.ArgumentOutOfRangeException
  isExternal: true
  name: Message
  nameWithType: ArgumentOutOfRangeException.Message
  fullName: System.ArgumentOutOfRangeException.Message
- uid: System.ArgumentOutOfRangeException.ActualValue
  commentId: P:System.ArgumentOutOfRangeException.ActualValue
  parent: System.ArgumentOutOfRangeException
  isExternal: true
  name: ActualValue
  nameWithType: ArgumentOutOfRangeException.ActualValue
  fullName: System.ArgumentOutOfRangeException.ActualValue
- uid: System.ArgumentException.ParamName
  commentId: P:System.ArgumentException.ParamName
  parent: System.ArgumentException
  isExternal: true
  name: ParamName
  nameWithType: ArgumentException.ParamName
  fullName: System.ArgumentException.ParamName
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: true
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.ToString
  commentId: M:System.Exception.ToString
  parent: System.Exception
  isExternal: true
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetType
  commentId: M:System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: true
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: true
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: true
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: true
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: true
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: true
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.InteropServices
  commentId: N:System.Runtime.InteropServices
  isExternal: true
  name: System.Runtime.InteropServices
  nameWithType: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: NodaTime.SkippedTimeException.LocalDateTime*
  commentId: Overload:NodaTime.SkippedTimeException.LocalDateTime
  name: LocalDateTime
  nameWithType: SkippedTimeException.LocalDateTime
  fullName: NodaTime.SkippedTimeException.LocalDateTime
- uid: NodaTime.LocalDateTime
  commentId: T:NodaTime.LocalDateTime
  parent: NodaTime
  name: LocalDateTime
  nameWithType: LocalDateTime
  fullName: NodaTime.LocalDateTime
- uid: NodaTime.SkippedTimeException.Zone*
  commentId: Overload:NodaTime.SkippedTimeException.Zone
  name: Zone
  nameWithType: SkippedTimeException.Zone
  fullName: NodaTime.SkippedTimeException.Zone
- uid: NodaTime.DateTimeZone
  commentId: T:NodaTime.DateTimeZone
  parent: NodaTime
  name: DateTimeZone
  nameWithType: DateTimeZone
  fullName: NodaTime.DateTimeZone
- uid: NodaTime.SkippedTimeException.#ctor*
  commentId: Overload:NodaTime.SkippedTimeException.#ctor
  name: SkippedTimeException
  nameWithType: SkippedTimeException.SkippedTimeException
  fullName: NodaTime.SkippedTimeException.SkippedTimeException
shouldSkipMarkup: true
