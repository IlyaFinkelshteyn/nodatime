### YamlMime:ManagedReference
items:
- uid: NodaTime.NodaConstants
  commentId: T:NodaTime.NodaConstants
  id: NodaConstants
  parent: NodaTime
  children:
  - NodaTime.NodaConstants.BclEpoch
  - NodaTime.NodaConstants.DaysPerStandardWeek
  - NodaTime.NodaConstants.HoursPerStandardDay
  - NodaTime.NodaConstants.HoursPerStandardWeek
  - NodaTime.NodaConstants.MillisecondsPerHour
  - NodaTime.NodaConstants.MillisecondsPerMinute
  - NodaTime.NodaConstants.MillisecondsPerSecond
  - NodaTime.NodaConstants.MillisecondsPerStandardDay
  - NodaTime.NodaConstants.MillisecondsPerStandardWeek
  - NodaTime.NodaConstants.MinutesPerHour
  - NodaTime.NodaConstants.MinutesPerStandardDay
  - NodaTime.NodaConstants.MinutesPerStandardWeek
  - NodaTime.NodaConstants.SecondsPerHour
  - NodaTime.NodaConstants.SecondsPerMinute
  - NodaTime.NodaConstants.SecondsPerStandardDay
  - NodaTime.NodaConstants.SecondsPerWeek
  - NodaTime.NodaConstants.TicksPerHour
  - NodaTime.NodaConstants.TicksPerMillisecond
  - NodaTime.NodaConstants.TicksPerMinute
  - NodaTime.NodaConstants.TicksPerSecond
  - NodaTime.NodaConstants.TicksPerStandardDay
  - NodaTime.NodaConstants.TicksPerStandardWeek
  - NodaTime.NodaConstants.UnixEpoch
  langs:
  - csharp
  - vb
  name: NodaConstants
  nameWithType: NodaConstants
  fullName: NodaTime.NodaConstants
  type: Class
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: NodaConstants
    path: src/NodaTime/NodaConstants.cs
    startLine: 11
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nUseful constants, mostly along the lines of &quot;number of milliseconds in an hour&quot;.\n"
  example: []
  syntax:
    content: public static class NodaConstants
    content.vb: Public Module NodaConstants
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: NodaTime.NodaConstants.TicksPerMillisecond
  commentId: F:NodaTime.NodaConstants.TicksPerMillisecond
  id: TicksPerMillisecond
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: TicksPerMillisecond
  nameWithType: NodaConstants.TicksPerMillisecond
  fullName: NodaTime.NodaConstants.TicksPerMillisecond
  type: Field
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: TicksPerMillisecond
    path: src/NodaTime/NodaConstants.cs
    startLine: 16
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nA constant for the number of ticks in a millisecond. The value of this constant is 10,000.\n"
  example: []
  syntax:
    content: public const long TicksPerMillisecond = 10000L
    return:
      type: System.Int64
    content.vb: Public Const TicksPerMillisecond As Long = 10000L
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NodaTime.NodaConstants.TicksPerSecond
  commentId: F:NodaTime.NodaConstants.TicksPerSecond
  id: TicksPerSecond
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: TicksPerSecond
  nameWithType: NodaConstants.TicksPerSecond
  fullName: NodaTime.NodaConstants.TicksPerSecond
  type: Field
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: TicksPerSecond
    path: src/NodaTime/NodaConstants.cs
    startLine: 20
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nA constant for the number of ticks in a second. The value of this constant is 10,000,000.\n"
  example: []
  syntax:
    content: public const long TicksPerSecond = 10000000L
    return:
      type: System.Int64
    content.vb: Public Const TicksPerSecond As Long = 10000000L
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NodaTime.NodaConstants.TicksPerMinute
  commentId: F:NodaTime.NodaConstants.TicksPerMinute
  id: TicksPerMinute
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: TicksPerMinute
  nameWithType: NodaConstants.TicksPerMinute
  fullName: NodaTime.NodaConstants.TicksPerMinute
  type: Field
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: TicksPerMinute
    path: src/NodaTime/NodaConstants.cs
    startLine: 24
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nA constant for the number of ticks in a minute. The value of this constant is 600,000,000.\n"
  example: []
  syntax:
    content: public const long TicksPerMinute = 600000000L
    return:
      type: System.Int64
    content.vb: Public Const TicksPerMinute As Long = 600000000L
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NodaTime.NodaConstants.TicksPerHour
  commentId: F:NodaTime.NodaConstants.TicksPerHour
  id: TicksPerHour
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: TicksPerHour
  nameWithType: NodaConstants.TicksPerHour
  fullName: NodaTime.NodaConstants.TicksPerHour
  type: Field
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: TicksPerHour
    path: src/NodaTime/NodaConstants.cs
    startLine: 28
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nA constant for the number of ticks in an hour. The value of this constant is 36,000,000,000.\n"
  example: []
  syntax:
    content: public const long TicksPerHour = 36000000000L
    return:
      type: System.Int64
    content.vb: Public Const TicksPerHour As Long = 36000000000L
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NodaTime.NodaConstants.TicksPerStandardDay
  commentId: F:NodaTime.NodaConstants.TicksPerStandardDay
  id: TicksPerStandardDay
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: TicksPerStandardDay
  nameWithType: NodaConstants.TicksPerStandardDay
  fullName: NodaTime.NodaConstants.TicksPerStandardDay
  type: Field
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: TicksPerStandardDay
    path: src/NodaTime/NodaConstants.cs
    startLine: 34
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nA constant for the number of ticks in a standard 24-hour day.\nThe value of this constant is 864,000,000,000.\n"
  example: []
  syntax:
    content: public const long TicksPerStandardDay = 864000000000L
    return:
      type: System.Int64
    content.vb: Public Const TicksPerStandardDay As Long = 864000000000L
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NodaTime.NodaConstants.TicksPerStandardWeek
  commentId: F:NodaTime.NodaConstants.TicksPerStandardWeek
  id: TicksPerStandardWeek
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: TicksPerStandardWeek
  nameWithType: NodaConstants.TicksPerStandardWeek
  fullName: NodaTime.NodaConstants.TicksPerStandardWeek
  type: Field
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: TicksPerStandardWeek
    path: src/NodaTime/NodaConstants.cs
    startLine: 40
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nA constant for the number of ticks in a standard week of seven 24-hour days.\nThe value of this constant is 6,048,000,000,000.\n"
  example: []
  syntax:
    content: public const long TicksPerStandardWeek = 6048000000000L
    return:
      type: System.Int64
    content.vb: Public Const TicksPerStandardWeek As Long = 6048000000000L
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NodaTime.NodaConstants.MillisecondsPerSecond
  commentId: F:NodaTime.NodaConstants.MillisecondsPerSecond
  id: MillisecondsPerSecond
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: MillisecondsPerSecond
  nameWithType: NodaConstants.MillisecondsPerSecond
  fullName: NodaTime.NodaConstants.MillisecondsPerSecond
  type: Field
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: MillisecondsPerSecond
    path: src/NodaTime/NodaConstants.cs
    startLine: 46
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nA constant for the number of milliseconds per second.\nThe value of this constant is 1000.\n"
  example: []
  syntax:
    content: public const int MillisecondsPerSecond = 1000
    return:
      type: System.Int32
    content.vb: Public Const MillisecondsPerSecond As Integer = 1000
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NodaTime.NodaConstants.MillisecondsPerMinute
  commentId: F:NodaTime.NodaConstants.MillisecondsPerMinute
  id: MillisecondsPerMinute
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: MillisecondsPerMinute
  nameWithType: NodaConstants.MillisecondsPerMinute
  fullName: NodaTime.NodaConstants.MillisecondsPerMinute
  type: Field
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: MillisecondsPerMinute
    path: src/NodaTime/NodaConstants.cs
    startLine: 51
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nA constant for the number of milliseconds per minute.\nThe value of this constant is 60,000.\n"
  example: []
  syntax:
    content: public const int MillisecondsPerMinute = 60000
    return:
      type: System.Int32
    content.vb: Public Const MillisecondsPerMinute As Integer = 60000
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NodaTime.NodaConstants.MillisecondsPerHour
  commentId: F:NodaTime.NodaConstants.MillisecondsPerHour
  id: MillisecondsPerHour
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: MillisecondsPerHour
  nameWithType: NodaConstants.MillisecondsPerHour
  fullName: NodaTime.NodaConstants.MillisecondsPerHour
  type: Field
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: MillisecondsPerHour
    path: src/NodaTime/NodaConstants.cs
    startLine: 56
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nA constant for the number of milliseconds per hour.\nThe value of this constant is 3,600,000.\n"
  example: []
  syntax:
    content: public const int MillisecondsPerHour = 3600000
    return:
      type: System.Int32
    content.vb: Public Const MillisecondsPerHour As Integer = 3600000
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NodaTime.NodaConstants.MillisecondsPerStandardDay
  commentId: F:NodaTime.NodaConstants.MillisecondsPerStandardDay
  id: MillisecondsPerStandardDay
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: MillisecondsPerStandardDay
  nameWithType: NodaConstants.MillisecondsPerStandardDay
  fullName: NodaTime.NodaConstants.MillisecondsPerStandardDay
  type: Field
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: MillisecondsPerStandardDay
    path: src/NodaTime/NodaConstants.cs
    startLine: 61
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nA constant for the number of milliseconds per standard 24-hour day.\nThe value of this constant is 86,400,000.\n"
  example: []
  syntax:
    content: public const int MillisecondsPerStandardDay = 86400000
    return:
      type: System.Int32
    content.vb: Public Const MillisecondsPerStandardDay As Integer = 86400000
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NodaTime.NodaConstants.MillisecondsPerStandardWeek
  commentId: F:NodaTime.NodaConstants.MillisecondsPerStandardWeek
  id: MillisecondsPerStandardWeek
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: MillisecondsPerStandardWeek
  nameWithType: NodaConstants.MillisecondsPerStandardWeek
  fullName: NodaTime.NodaConstants.MillisecondsPerStandardWeek
  type: Field
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: MillisecondsPerStandardWeek
    path: src/NodaTime/NodaConstants.cs
    startLine: 66
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nA constant for the number of milliseconds per standard week of seven 24-hour days.\nThe value of this constant is 604,800,000.\n"
  example: []
  syntax:
    content: public const int MillisecondsPerStandardWeek = 604800000
    return:
      type: System.Int32
    content.vb: Public Const MillisecondsPerStandardWeek As Integer = 604800000
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NodaTime.NodaConstants.SecondsPerMinute
  commentId: F:NodaTime.NodaConstants.SecondsPerMinute
  id: SecondsPerMinute
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: SecondsPerMinute
  nameWithType: NodaConstants.SecondsPerMinute
  fullName: NodaTime.NodaConstants.SecondsPerMinute
  type: Field
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: SecondsPerMinute
    path: src/NodaTime/NodaConstants.cs
    startLine: 72
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nA constant for the number of seconds per minute.\nThe value of this constant is 60.\n"
  example: []
  syntax:
    content: public const int SecondsPerMinute = 60
    return:
      type: System.Int32
    content.vb: Public Const SecondsPerMinute As Integer = 60
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NodaTime.NodaConstants.SecondsPerHour
  commentId: F:NodaTime.NodaConstants.SecondsPerHour
  id: SecondsPerHour
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: SecondsPerHour
  nameWithType: NodaConstants.SecondsPerHour
  fullName: NodaTime.NodaConstants.SecondsPerHour
  type: Field
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: SecondsPerHour
    path: src/NodaTime/NodaConstants.cs
    startLine: 77
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nA constant for the number of seconds per hour.\nThe value of this constant is 3,600.\n"
  example: []
  syntax:
    content: public const int SecondsPerHour = 3600
    return:
      type: System.Int32
    content.vb: Public Const SecondsPerHour As Integer = 3600
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NodaTime.NodaConstants.SecondsPerStandardDay
  commentId: F:NodaTime.NodaConstants.SecondsPerStandardDay
  id: SecondsPerStandardDay
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: SecondsPerStandardDay
  nameWithType: NodaConstants.SecondsPerStandardDay
  fullName: NodaTime.NodaConstants.SecondsPerStandardDay
  type: Field
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: SecondsPerStandardDay
    path: src/NodaTime/NodaConstants.cs
    startLine: 82
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nA constant for the number of seconds per standard 24-hour day.\nThe value of this constant is 86,400.\n"
  example: []
  syntax:
    content: public const int SecondsPerStandardDay = 86400
    return:
      type: System.Int32
    content.vb: Public Const SecondsPerStandardDay As Integer = 86400
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NodaTime.NodaConstants.SecondsPerWeek
  commentId: F:NodaTime.NodaConstants.SecondsPerWeek
  id: SecondsPerWeek
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: SecondsPerWeek
  nameWithType: NodaConstants.SecondsPerWeek
  fullName: NodaTime.NodaConstants.SecondsPerWeek
  type: Field
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: SecondsPerWeek
    path: src/NodaTime/NodaConstants.cs
    startLine: 87
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nA constant for the number of seconds per standard week of seven 24-hour days.\nThe value of this constant is 604,800.\n"
  example: []
  syntax:
    content: public const int SecondsPerWeek = 604800
    return:
      type: System.Int32
    content.vb: Public Const SecondsPerWeek As Integer = 604800
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NodaTime.NodaConstants.MinutesPerHour
  commentId: F:NodaTime.NodaConstants.MinutesPerHour
  id: MinutesPerHour
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: MinutesPerHour
  nameWithType: NodaConstants.MinutesPerHour
  fullName: NodaTime.NodaConstants.MinutesPerHour
  type: Field
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: MinutesPerHour
    path: src/NodaTime/NodaConstants.cs
    startLine: 93
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nA constant for the number of minutes per hour.\nThe value of this constant is 60.\n"
  example: []
  syntax:
    content: public const int MinutesPerHour = 60
    return:
      type: System.Int32
    content.vb: Public Const MinutesPerHour As Integer = 60
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NodaTime.NodaConstants.MinutesPerStandardDay
  commentId: F:NodaTime.NodaConstants.MinutesPerStandardDay
  id: MinutesPerStandardDay
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: MinutesPerStandardDay
  nameWithType: NodaConstants.MinutesPerStandardDay
  fullName: NodaTime.NodaConstants.MinutesPerStandardDay
  type: Field
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: MinutesPerStandardDay
    path: src/NodaTime/NodaConstants.cs
    startLine: 98
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nA constant for the number of minutes per standard 24-hour day.\nThe value of this constant is 1,440.\n"
  example: []
  syntax:
    content: public const int MinutesPerStandardDay = 1440
    return:
      type: System.Int32
    content.vb: Public Const MinutesPerStandardDay As Integer = 1440
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NodaTime.NodaConstants.MinutesPerStandardWeek
  commentId: F:NodaTime.NodaConstants.MinutesPerStandardWeek
  id: MinutesPerStandardWeek
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: MinutesPerStandardWeek
  nameWithType: NodaConstants.MinutesPerStandardWeek
  fullName: NodaTime.NodaConstants.MinutesPerStandardWeek
  type: Field
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: MinutesPerStandardWeek
    path: src/NodaTime/NodaConstants.cs
    startLine: 103
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nA constant for the number of minutes per standard week of seven 24-hour days.\nThe value of this constant is 10,080.\n"
  example: []
  syntax:
    content: public const int MinutesPerStandardWeek = 10080
    return:
      type: System.Int32
    content.vb: Public Const MinutesPerStandardWeek As Integer = 10080
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NodaTime.NodaConstants.HoursPerStandardDay
  commentId: F:NodaTime.NodaConstants.HoursPerStandardDay
  id: HoursPerStandardDay
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: HoursPerStandardDay
  nameWithType: NodaConstants.HoursPerStandardDay
  fullName: NodaTime.NodaConstants.HoursPerStandardDay
  type: Field
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: HoursPerStandardDay
    path: src/NodaTime/NodaConstants.cs
    startLine: 110
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nA constant for the number of hours in a standard day. Note that the number of hours\nin a day can vary due to daylight saving effects.\nThe value of this constant is 24.\n"
  example: []
  syntax:
    content: public const int HoursPerStandardDay = 24
    return:
      type: System.Int32
    content.vb: Public Const HoursPerStandardDay As Integer = 24
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NodaTime.NodaConstants.HoursPerStandardWeek
  commentId: F:NodaTime.NodaConstants.HoursPerStandardWeek
  id: HoursPerStandardWeek
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: HoursPerStandardWeek
  nameWithType: NodaConstants.HoursPerStandardWeek
  fullName: NodaTime.NodaConstants.HoursPerStandardWeek
  type: Field
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: HoursPerStandardWeek
    path: src/NodaTime/NodaConstants.cs
    startLine: 115
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nA constant for the number of hours in a standard week of seven 24-hour days.\nThe value of this constant is 168.\n"
  example: []
  syntax:
    content: public const int HoursPerStandardWeek = 168
    return:
      type: System.Int32
    content.vb: Public Const HoursPerStandardWeek As Integer = 168
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NodaTime.NodaConstants.DaysPerStandardWeek
  commentId: F:NodaTime.NodaConstants.DaysPerStandardWeek
  id: DaysPerStandardWeek
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: DaysPerStandardWeek
  nameWithType: NodaConstants.DaysPerStandardWeek
  fullName: NodaTime.NodaConstants.DaysPerStandardWeek
  type: Field
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: DaysPerStandardWeek
    path: src/NodaTime/NodaConstants.cs
    startLine: 121
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nNumber of days in a standard Gregorian week.\nThe value of this constant is 7.\n"
  example: []
  syntax:
    content: public const int DaysPerStandardWeek = 7
    return:
      type: System.Int32
    content.vb: Public Const DaysPerStandardWeek As Integer = 7
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NodaTime.NodaConstants.UnixEpoch
  commentId: F:NodaTime.NodaConstants.UnixEpoch
  id: UnixEpoch
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: UnixEpoch
  nameWithType: NodaConstants.UnixEpoch
  fullName: NodaTime.NodaConstants.UnixEpoch
  type: Field
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: UnixEpoch
    path: src/NodaTime/NodaConstants.cs
    startLine: 130
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nThe instant at the Unix epoch of midnight 1st January 1970 UTC.\n"
  remarks: "\nThis value is not only the Unix epoch, but the Noda Time epoch, as it represents the value\nwith a <xref href=\"NodaTime.Instant.Ticks\" data-throw-if-not-resolved=\"false\"></xref> property of 0.\n"
  example: []
  syntax:
    content: public static readonly Instant UnixEpoch
    return:
      type: NodaTime.Instant
    content.vb: Public Shared ReadOnly UnixEpoch As Instant
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NodaTime.NodaConstants.BclEpoch
  commentId: F:NodaTime.NodaConstants.BclEpoch
  id: BclEpoch
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: BclEpoch
  nameWithType: NodaConstants.BclEpoch
  fullName: NodaTime.NodaConstants.BclEpoch
  type: Field
  source:
    remote:
      path: 1.1.x/src/NodaTime/NodaConstants.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: BclEpoch
    path: src/NodaTime/NodaConstants.cs
    startLine: 135
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nThe instant at the BCL epoch of midnight 1st January 0001 UTC.\n"
  example: []
  syntax:
    content: public static readonly Instant BclEpoch
    return:
      type: NodaTime.Instant
    content.vb: Public Shared ReadOnly BclEpoch As Instant
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: NodaTime
  commentId: N:NodaTime
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NodaTime.Instant.Ticks
  commentId: P:NodaTime.Instant.Ticks
  isExternal: true
- uid: NodaTime.Instant
  commentId: T:NodaTime.Instant
  parent: NodaTime
  name: Instant
  nameWithType: Instant
  fullName: NodaTime.Instant
shouldSkipMarkup: true
