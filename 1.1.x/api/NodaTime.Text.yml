### YamlMime:ManagedReference
items:
- uid: NodaTime.Text
  commentId: N:NodaTime.Text
  id: NodaTime.Text
  children:
  - NodaTime.Text.InstantPattern
  - NodaTime.Text.InvalidPatternException
  - NodaTime.Text.IPattern`1
  - NodaTime.Text.LocalDatePattern
  - NodaTime.Text.LocalDateTimePattern
  - NodaTime.Text.LocalTimePattern
  - NodaTime.Text.OffsetPattern
  - NodaTime.Text.ParseResult`1
  - NodaTime.Text.PeriodPattern
  - NodaTime.Text.UnparsableValueException
  langs:
  - csharp
  - vb
  name: NodaTime.Text
  nameWithType: NodaTime.Text
  fullName: NodaTime.Text
  type: Namespace
  assemblies:
  - NodaTime
references:
- uid: NodaTime.Text.InstantPattern
  commentId: T:NodaTime.Text.InstantPattern
  parent: NodaTime.Text
  name: InstantPattern
  nameWithType: InstantPattern
  fullName: NodaTime.Text.InstantPattern
- uid: NodaTime.Text.InvalidPatternException
  commentId: T:NodaTime.Text.InvalidPatternException
  name: InvalidPatternException
  nameWithType: InvalidPatternException
  fullName: NodaTime.Text.InvalidPatternException
- uid: NodaTime.Text.IPattern`1
  commentId: T:NodaTime.Text.IPattern`1
  name: IPattern<T>
  nameWithType: IPattern<T>
  fullName: NodaTime.Text.IPattern<T>
  nameWithType.vb: IPattern(Of T)
  fullName.vb: NodaTime.Text.IPattern(Of T)
  name.vb: IPattern(Of T)
  spec.csharp:
  - uid: NodaTime.Text.IPattern`1
    name: IPattern
    nameWithType: IPattern
    fullName: NodaTime.Text.IPattern
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NodaTime.Text.IPattern`1
    name: IPattern
    nameWithType: IPattern
    fullName: NodaTime.Text.IPattern
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NodaTime.Text.LocalDatePattern
  commentId: T:NodaTime.Text.LocalDatePattern
  parent: NodaTime.Text
  name: LocalDatePattern
  nameWithType: LocalDatePattern
  fullName: NodaTime.Text.LocalDatePattern
- uid: NodaTime.Text.LocalDateTimePattern
  commentId: T:NodaTime.Text.LocalDateTimePattern
  parent: NodaTime.Text
  name: LocalDateTimePattern
  nameWithType: LocalDateTimePattern
  fullName: NodaTime.Text.LocalDateTimePattern
- uid: NodaTime.Text.LocalTimePattern
  commentId: T:NodaTime.Text.LocalTimePattern
  parent: NodaTime.Text
  name: LocalTimePattern
  nameWithType: LocalTimePattern
  fullName: NodaTime.Text.LocalTimePattern
- uid: NodaTime.Text.OffsetPattern
  commentId: T:NodaTime.Text.OffsetPattern
  parent: NodaTime.Text
  name: OffsetPattern
  nameWithType: OffsetPattern
  fullName: NodaTime.Text.OffsetPattern
- uid: NodaTime.Text.PeriodPattern
  commentId: T:NodaTime.Text.PeriodPattern
  parent: NodaTime.Text
  name: PeriodPattern
  nameWithType: PeriodPattern
  fullName: NodaTime.Text.PeriodPattern
- uid: NodaTime.Text.ParseResult`1
  commentId: T:NodaTime.Text.ParseResult`1
  name: ParseResult<T>
  nameWithType: ParseResult<T>
  fullName: NodaTime.Text.ParseResult<T>
  nameWithType.vb: ParseResult(Of T)
  fullName.vb: NodaTime.Text.ParseResult(Of T)
  name.vb: ParseResult(Of T)
  spec.csharp:
  - uid: NodaTime.Text.ParseResult`1
    name: ParseResult
    nameWithType: ParseResult
    fullName: NodaTime.Text.ParseResult
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NodaTime.Text.ParseResult`1
    name: ParseResult
    nameWithType: ParseResult
    fullName: NodaTime.Text.ParseResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NodaTime.Text.UnparsableValueException
  commentId: T:NodaTime.Text.UnparsableValueException
  name: UnparsableValueException
  nameWithType: UnparsableValueException
  fullName: NodaTime.Text.UnparsableValueException
- uid: NodaTime.Text
  commentId: N:NodaTime.Text
  name: NodaTime.Text
  nameWithType: NodaTime.Text
  fullName: NodaTime.Text
shouldSkipMarkup: true
