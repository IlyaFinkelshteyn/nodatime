### YamlMime:ManagedReference
items:
- uid: NodaTime.DateTimeZoneProviders
  commentId: T:NodaTime.DateTimeZoneProviders
  id: DateTimeZoneProviders
  parent: NodaTime
  children:
  - NodaTime.DateTimeZoneProviders.Bcl
  - NodaTime.DateTimeZoneProviders.Default
  - NodaTime.DateTimeZoneProviders.Tzdb
  langs:
  - csharp
  - vb
  name: DateTimeZoneProviders
  nameWithType: DateTimeZoneProviders
  fullName: NodaTime.DateTimeZoneProviders
  type: Class
  source:
    remote:
      path: 1.1.x/src/NodaTime/DateTimeZoneProviders.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: DateTimeZoneProviders
    path: src/NodaTime/DateTimeZoneProviders.cs
    startLine: 12
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nStatic access to date/time zone providers built into Noda Time. These are all thread-safe and caching.\n"
  example: []
  syntax:
    content: public static class DateTimeZoneProviders
    content.vb: Public Module DateTimeZoneProviders
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: NodaTime.DateTimeZoneProviders.Tzdb
  commentId: P:NodaTime.DateTimeZoneProviders.Tzdb
  id: Tzdb
  parent: NodaTime.DateTimeZoneProviders
  langs:
  - csharp
  - vb
  name: Tzdb
  nameWithType: DateTimeZoneProviders.Tzdb
  fullName: NodaTime.DateTimeZoneProviders.Tzdb
  type: Property
  source:
    remote:
      path: 1.1.x/src/NodaTime/DateTimeZoneProviders.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Tzdb
    path: src/NodaTime/DateTimeZoneProviders.cs
    startLine: 20
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nGets a time zone provider which uses a <xref href=\"NodaTime.TimeZones.TzdbDateTimeZoneSource\" data-throw-if-not-resolved=\"false\"></xref>.\nThe underlying source is <xref href=\"NodaTime.TimeZones.TzdbDateTimeZoneSource.Default\" data-throw-if-not-resolved=\"false\"></xref>, which is initialized from\nresources within the NodaTime assembly.\n"
  example: []
  syntax:
    content: public static IDateTimeZoneProvider Tzdb { get; }
    parameters: []
    return:
      type: NodaTime.IDateTimeZoneProvider
    content.vb: Public Shared ReadOnly Property Tzdb As IDateTimeZoneProvider
  overload: NodaTime.DateTimeZoneProviders.Tzdb*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NodaTime.DateTimeZoneProviders.Default
  commentId: P:NodaTime.DateTimeZoneProviders.Default
  id: Default
  parent: NodaTime.DateTimeZoneProviders
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: DateTimeZoneProviders.Default
  fullName: NodaTime.DateTimeZoneProviders.Default
  type: Property
  source:
    remote:
      path: 1.1.x/src/NodaTime/DateTimeZoneProviders.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Default
    path: src/NodaTime/DateTimeZoneProviders.cs
    startLine: 29
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nGets the TZDB time zone provider.\nThis always returns the same value as the <xref href=\"NodaTime.DateTimeZoneProviders.Tzdb\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
  remarks: This method is not available in the PCL version, as it was made obsolete in Noda Time 1.1.
  example: []
  syntax:
    content: >-
      [Obsolete("Use DateTimeZoneProviders.Tzdb instead")]

      public static IDateTimeZoneProvider Default { get; }
    parameters: []
    return:
      type: NodaTime.IDateTimeZoneProvider
    content.vb: >-
      <Obsolete("Use DateTimeZoneProviders.Tzdb instead")>

      Public Shared ReadOnly Property Default As IDateTimeZoneProvider
  overload: NodaTime.DateTimeZoneProviders.Default*
  seealso:
  - linkId: NodaTime.DateTimeZoneProviders.Tzdb
    commentId: P:NodaTime.DateTimeZoneProviders.Tzdb
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use DateTimeZoneProviders.Tzdb instead
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NodaTime.DateTimeZoneProviders.Bcl
  commentId: P:NodaTime.DateTimeZoneProviders.Bcl
  id: Bcl
  parent: NodaTime.DateTimeZoneProviders
  langs:
  - csharp
  - vb
  name: Bcl
  nameWithType: DateTimeZoneProviders.Bcl
  fullName: NodaTime.DateTimeZoneProviders.Bcl
  type: Property
  source:
    remote:
      path: 1.1.x/src/NodaTime/DateTimeZoneProviders.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Bcl
    path: src/NodaTime/DateTimeZoneProviders.cs
    startLine: 38
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nGets a time zone provider which uses a <xref href=\"NodaTime.TimeZones.BclDateTimeZoneSource\" data-throw-if-not-resolved=\"false\"></xref>.\nThis property is not available on the PCL build of Noda Time.\n"
  example: []
  syntax:
    content: public static IDateTimeZoneProvider Bcl { get; }
    parameters: []
    return:
      type: NodaTime.IDateTimeZoneProvider
    content.vb: Public Shared ReadOnly Property Bcl As IDateTimeZoneProvider
  overload: NodaTime.DateTimeZoneProviders.Bcl*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: NodaTime
  commentId: N:NodaTime
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NodaTime.TimeZones.TzdbDateTimeZoneSource
  commentId: T:NodaTime.TimeZones.TzdbDateTimeZoneSource
  parent: NodaTime.TimeZones
  name: TzdbDateTimeZoneSource
  nameWithType: TzdbDateTimeZoneSource
  fullName: NodaTime.TimeZones.TzdbDateTimeZoneSource
- uid: NodaTime.TimeZones.TzdbDateTimeZoneSource.Default
  commentId: P:NodaTime.TimeZones.TzdbDateTimeZoneSource.Default
  isExternal: true
- uid: NodaTime.DateTimeZoneProviders.Tzdb*
  commentId: Overload:NodaTime.DateTimeZoneProviders.Tzdb
  name: Tzdb
  nameWithType: DateTimeZoneProviders.Tzdb
  fullName: NodaTime.DateTimeZoneProviders.Tzdb
- uid: NodaTime.IDateTimeZoneProvider
  commentId: T:NodaTime.IDateTimeZoneProvider
  parent: NodaTime
  name: IDateTimeZoneProvider
  nameWithType: IDateTimeZoneProvider
  fullName: NodaTime.IDateTimeZoneProvider
- uid: NodaTime.TimeZones
  commentId: N:NodaTime.TimeZones
  name: NodaTime.TimeZones
  nameWithType: NodaTime.TimeZones
  fullName: NodaTime.TimeZones
- uid: NodaTime.DateTimeZoneProviders.Tzdb
  commentId: P:NodaTime.DateTimeZoneProviders.Tzdb
  isExternal: true
- uid: NodaTime.DateTimeZoneProviders.Default*
  commentId: Overload:NodaTime.DateTimeZoneProviders.Default
  name: Default
  nameWithType: DateTimeZoneProviders.Default
  fullName: NodaTime.DateTimeZoneProviders.Default
- uid: NodaTime.TimeZones.BclDateTimeZoneSource
  commentId: T:NodaTime.TimeZones.BclDateTimeZoneSource
  name: BclDateTimeZoneSource
  nameWithType: BclDateTimeZoneSource
  fullName: NodaTime.TimeZones.BclDateTimeZoneSource
- uid: NodaTime.DateTimeZoneProviders.Bcl*
  commentId: Overload:NodaTime.DateTimeZoneProviders.Bcl
  name: Bcl
  nameWithType: DateTimeZoneProviders.Bcl
  fullName: NodaTime.DateTimeZoneProviders.Bcl
shouldSkipMarkup: true
