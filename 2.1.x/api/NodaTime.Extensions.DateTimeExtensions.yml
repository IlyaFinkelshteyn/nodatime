### YamlMime:ManagedReference
items:
- uid: NodaTime.Extensions.DateTimeExtensions
  commentId: T:NodaTime.Extensions.DateTimeExtensions
  id: DateTimeExtensions
  parent: NodaTime.Extensions
  children:
  - NodaTime.Extensions.DateTimeExtensions.ToInstant(System.DateTime)
  - NodaTime.Extensions.DateTimeExtensions.ToLocalDateTime(System.DateTime)
  langs:
  - csharp
  - vb
  name: DateTimeExtensions
  nameWithType: DateTimeExtensions
  fullName: NodaTime.Extensions.DateTimeExtensions
  type: Class
  source:
    remote:
      path: 2.1.x/src/NodaTime/Extensions/DateTimeExtensions.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: DateTimeExtensions
    path: src/NodaTime/Extensions/DateTimeExtensions.cs
    startLine: 10
  assemblies:
  - NodaTime
  namespace: NodaTime.Extensions
  summary: "\nExtension methods for <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class DateTimeExtensions
    content.vb: Public Module DateTimeExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: NodaTime.Extensions.DateTimeExtensions.ToLocalDateTime(System.DateTime)
  commentId: M:NodaTime.Extensions.DateTimeExtensions.ToLocalDateTime(System.DateTime)
  id: ToLocalDateTime(System.DateTime)
  isExtensionMethod: true
  parent: NodaTime.Extensions.DateTimeExtensions
  langs:
  - csharp
  - vb
  name: ToLocalDateTime(DateTime)
  nameWithType: DateTimeExtensions.ToLocalDateTime(DateTime)
  fullName: NodaTime.Extensions.DateTimeExtensions.ToLocalDateTime(System.DateTime)
  type: Method
  source:
    remote:
      path: 2.1.x/src/NodaTime/Extensions/DateTimeExtensions.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: ToLocalDateTime
    path: src/NodaTime/Extensions/DateTimeExtensions.cs
    startLine: 18
  assemblies:
  - NodaTime
  namespace: NodaTime.Extensions
  summary: "\nConverts a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> of any kind to <xref href=\"NodaTime.LocalDateTime\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: This is a convenience method which calls <xref href="NodaTime.LocalDateTime.FromDateTime(System.DateTime)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static LocalDateTime ToLocalDateTime(this DateTime dateTime)
    parameters:
    - id: dateTime
      type: System.DateTime
      description: The <code>DateTime</code> to convert.
    return:
      type: NodaTime.LocalDateTime
      description: A new <xref href="NodaTime.LocalDateTime" data-throw-if-not-resolved="false"></xref> with the same values as <code data-dev-comment-type="paramref" class="paramref">dateTime</code>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToLocalDateTime(dateTime As Date) As LocalDateTime
  overload: NodaTime.Extensions.DateTimeExtensions.ToLocalDateTime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Extensions.DateTimeExtensions.ToInstant(System.DateTime)
  commentId: M:NodaTime.Extensions.DateTimeExtensions.ToInstant(System.DateTime)
  id: ToInstant(System.DateTime)
  isExtensionMethod: true
  parent: NodaTime.Extensions.DateTimeExtensions
  langs:
  - csharp
  - vb
  name: ToInstant(DateTime)
  nameWithType: DateTimeExtensions.ToInstant(DateTime)
  fullName: NodaTime.Extensions.DateTimeExtensions.ToInstant(System.DateTime)
  type: Method
  source:
    remote:
      path: 2.1.x/src/NodaTime/Extensions/DateTimeExtensions.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: ToInstant
    path: src/NodaTime/Extensions/DateTimeExtensions.cs
    startLine: 27
  assemblies:
  - NodaTime
  namespace: NodaTime.Extensions
  summary: "\nConverts a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> with a kind of <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref> into an <xref href=\"NodaTime.Instant\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: This is a convenience method which calls <xref href="NodaTime.Instant.FromDateTimeUtc(System.DateTime)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Instant ToInstant(this DateTime dateTime)
    parameters:
    - id: dateTime
      type: System.DateTime
      description: The <code>DateTime</code> to convert.
    return:
      type: NodaTime.Instant
      description: An <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> value representing the same instant in time as <code data-dev-comment-type="paramref" class="paramref">dateTime</code>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToInstant(dateTime As Date) As Instant
  overload: NodaTime.Extensions.DateTimeExtensions.ToInstant*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code data-dev-comment-type="paramref" class="paramref">dateTime</code> does not have a kind of <code>Utc</code>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: NodaTime.Extensions
  commentId: N:NodaTime.Extensions
  name: NodaTime.Extensions
  nameWithType: NodaTime.Extensions
  fullName: NodaTime.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NodaTime.LocalDateTime
  commentId: T:NodaTime.LocalDateTime
  parent: NodaTime
  name: LocalDateTime
  nameWithType: LocalDateTime
  fullName: NodaTime.LocalDateTime
- uid: NodaTime.LocalDateTime.FromDateTime(System.DateTime)
  commentId: M:NodaTime.LocalDateTime.FromDateTime(System.DateTime)
  isExternal: true
- uid: NodaTime.Extensions.DateTimeExtensions.ToLocalDateTime*
  commentId: Overload:NodaTime.Extensions.DateTimeExtensions.ToLocalDateTime
  name: ToLocalDateTime
  nameWithType: DateTimeExtensions.ToLocalDateTime
  fullName: NodaTime.Extensions.DateTimeExtensions.ToLocalDateTime
- uid: NodaTime
  commentId: N:NodaTime
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: System.DateTimeKind.Utc
  commentId: F:System.DateTimeKind.Utc
  isExternal: true
- uid: NodaTime.Instant
  commentId: T:NodaTime.Instant
  parent: NodaTime
  name: Instant
  nameWithType: Instant
  fullName: NodaTime.Instant
- uid: NodaTime.Instant.FromDateTimeUtc(System.DateTime)
  commentId: M:NodaTime.Instant.FromDateTimeUtc(System.DateTime)
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: true
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: NodaTime.Extensions.DateTimeExtensions.ToInstant*
  commentId: Overload:NodaTime.Extensions.DateTimeExtensions.ToInstant
  name: ToInstant
  nameWithType: DateTimeExtensions.ToInstant
  fullName: NodaTime.Extensions.DateTimeExtensions.ToInstant
shouldSkipMarkup: true
