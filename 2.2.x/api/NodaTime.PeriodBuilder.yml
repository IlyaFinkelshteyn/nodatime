### YamlMime:ManagedReference
items:
- uid: NodaTime.PeriodBuilder
  commentId: T:NodaTime.PeriodBuilder
  id: PeriodBuilder
  parent: NodaTime
  children:
  - NodaTime.PeriodBuilder.#ctor
  - NodaTime.PeriodBuilder.#ctor(NodaTime.Period)
  - NodaTime.PeriodBuilder.Build
  - NodaTime.PeriodBuilder.Days
  - NodaTime.PeriodBuilder.Hours
  - NodaTime.PeriodBuilder.Item(NodaTime.PeriodUnits)
  - NodaTime.PeriodBuilder.Milliseconds
  - NodaTime.PeriodBuilder.Minutes
  - NodaTime.PeriodBuilder.Months
  - NodaTime.PeriodBuilder.Nanoseconds
  - NodaTime.PeriodBuilder.Seconds
  - NodaTime.PeriodBuilder.System#Xml#Serialization#IXmlSerializable#GetSchema
  - NodaTime.PeriodBuilder.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  - NodaTime.PeriodBuilder.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  - NodaTime.PeriodBuilder.Ticks
  - NodaTime.PeriodBuilder.Weeks
  - NodaTime.PeriodBuilder.Years
  langs:
  - csharp
  - vb
  name: PeriodBuilder
  nameWithType: PeriodBuilder
  fullName: NodaTime.PeriodBuilder
  type: Class
  source:
    remote:
      path: 2.2.x/src/NodaTime/PeriodBuilder.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: PeriodBuilder
    path: src/NodaTime/PeriodBuilder.cs
    startLine: 24
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nA mutable builder class for <xref href=\"NodaTime.Period\" data-throw-if-not-resolved=\"false\"></xref> values. Each property can\nbe set independently, and then a Period can be created from the result\nusing the <xref href=\"NodaTime.PeriodBuilder.Build\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: 'public sealed class PeriodBuilder : IXmlSerializable'
    content.vb: >-
      Public NotInheritable Class PeriodBuilder
          Implements IXmlSerializable
  inheritance:
  - System.Object
  implements:
  - System.Xml.Serialization.IXmlSerializable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: NodaTime.PeriodBuilder.Years
  commentId: P:NodaTime.PeriodBuilder.Years
  id: Years
  parent: NodaTime.PeriodBuilder
  langs:
  - csharp
  - vb
  name: Years
  nameWithType: PeriodBuilder.Years
  fullName: NodaTime.PeriodBuilder.Years
  type: Property
  source:
    remote:
      path: 2.2.x/src/NodaTime/PeriodBuilder.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Years
    path: src/NodaTime/PeriodBuilder.cs
    startLine: 32
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nGets or sets the number of years within the period.\n"
  example: []
  syntax:
    content: public int Years { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: The number of years within the period.
    content.vb: Public Property Years As Integer
  overload: NodaTime.PeriodBuilder.Years*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NodaTime.PeriodBuilder.Months
  commentId: P:NodaTime.PeriodBuilder.Months
  id: Months
  parent: NodaTime.PeriodBuilder
  langs:
  - csharp
  - vb
  name: Months
  nameWithType: PeriodBuilder.Months
  fullName: NodaTime.PeriodBuilder.Months
  type: Property
  source:
    remote:
      path: 2.2.x/src/NodaTime/PeriodBuilder.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Months
    path: src/NodaTime/PeriodBuilder.cs
    startLine: 38
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nGets or sets the number of months within the period.\n"
  example: []
  syntax:
    content: public int Months { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: The number of months within the period.
    content.vb: Public Property Months As Integer
  overload: NodaTime.PeriodBuilder.Months*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NodaTime.PeriodBuilder.Weeks
  commentId: P:NodaTime.PeriodBuilder.Weeks
  id: Weeks
  parent: NodaTime.PeriodBuilder
  langs:
  - csharp
  - vb
  name: Weeks
  nameWithType: PeriodBuilder.Weeks
  fullName: NodaTime.PeriodBuilder.Weeks
  type: Property
  source:
    remote:
      path: 2.2.x/src/NodaTime/PeriodBuilder.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Weeks
    path: src/NodaTime/PeriodBuilder.cs
    startLine: 44
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nGets or sets the number of weeks within the period.\n"
  example: []
  syntax:
    content: public int Weeks { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: The number of weeks within the period.
    content.vb: Public Property Weeks As Integer
  overload: NodaTime.PeriodBuilder.Weeks*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NodaTime.PeriodBuilder.Days
  commentId: P:NodaTime.PeriodBuilder.Days
  id: Days
  parent: NodaTime.PeriodBuilder
  langs:
  - csharp
  - vb
  name: Days
  nameWithType: PeriodBuilder.Days
  fullName: NodaTime.PeriodBuilder.Days
  type: Property
  source:
    remote:
      path: 2.2.x/src/NodaTime/PeriodBuilder.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Days
    path: src/NodaTime/PeriodBuilder.cs
    startLine: 50
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nGets or sets the number of days within the period.\n"
  example: []
  syntax:
    content: public int Days { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: The number of days within the period.
    content.vb: Public Property Days As Integer
  overload: NodaTime.PeriodBuilder.Days*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NodaTime.PeriodBuilder.Hours
  commentId: P:NodaTime.PeriodBuilder.Hours
  id: Hours
  parent: NodaTime.PeriodBuilder
  langs:
  - csharp
  - vb
  name: Hours
  nameWithType: PeriodBuilder.Hours
  fullName: NodaTime.PeriodBuilder.Hours
  type: Property
  source:
    remote:
      path: 2.2.x/src/NodaTime/PeriodBuilder.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Hours
    path: src/NodaTime/PeriodBuilder.cs
    startLine: 56
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nGets or sets the number of hours within the period.\n"
  example: []
  syntax:
    content: public long Hours { get; set; }
    parameters: []
    return:
      type: System.Int64
      description: The number of hours within the period.
    content.vb: Public Property Hours As Long
  overload: NodaTime.PeriodBuilder.Hours*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NodaTime.PeriodBuilder.Minutes
  commentId: P:NodaTime.PeriodBuilder.Minutes
  id: Minutes
  parent: NodaTime.PeriodBuilder
  langs:
  - csharp
  - vb
  name: Minutes
  nameWithType: PeriodBuilder.Minutes
  fullName: NodaTime.PeriodBuilder.Minutes
  type: Property
  source:
    remote:
      path: 2.2.x/src/NodaTime/PeriodBuilder.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Minutes
    path: src/NodaTime/PeriodBuilder.cs
    startLine: 62
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nGets or sets the number of minutes within the period.\n"
  example: []
  syntax:
    content: public long Minutes { get; set; }
    parameters: []
    return:
      type: System.Int64
      description: The number of minutes within the period.
    content.vb: Public Property Minutes As Long
  overload: NodaTime.PeriodBuilder.Minutes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NodaTime.PeriodBuilder.Seconds
  commentId: P:NodaTime.PeriodBuilder.Seconds
  id: Seconds
  parent: NodaTime.PeriodBuilder
  langs:
  - csharp
  - vb
  name: Seconds
  nameWithType: PeriodBuilder.Seconds
  fullName: NodaTime.PeriodBuilder.Seconds
  type: Property
  source:
    remote:
      path: 2.2.x/src/NodaTime/PeriodBuilder.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Seconds
    path: src/NodaTime/PeriodBuilder.cs
    startLine: 68
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nGets or sets the number of seconds within the period.\n"
  example: []
  syntax:
    content: public long Seconds { get; set; }
    parameters: []
    return:
      type: System.Int64
      description: The number of seconds within the period.
    content.vb: Public Property Seconds As Long
  overload: NodaTime.PeriodBuilder.Seconds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NodaTime.PeriodBuilder.Milliseconds
  commentId: P:NodaTime.PeriodBuilder.Milliseconds
  id: Milliseconds
  parent: NodaTime.PeriodBuilder
  langs:
  - csharp
  - vb
  name: Milliseconds
  nameWithType: PeriodBuilder.Milliseconds
  fullName: NodaTime.PeriodBuilder.Milliseconds
  type: Property
  source:
    remote:
      path: 2.2.x/src/NodaTime/PeriodBuilder.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Milliseconds
    path: src/NodaTime/PeriodBuilder.cs
    startLine: 74
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nGets or sets the number of milliseconds within the period.\n"
  example: []
  syntax:
    content: public long Milliseconds { get; set; }
    parameters: []
    return:
      type: System.Int64
      description: The number of milliseconds within the period.
    content.vb: Public Property Milliseconds As Long
  overload: NodaTime.PeriodBuilder.Milliseconds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NodaTime.PeriodBuilder.Ticks
  commentId: P:NodaTime.PeriodBuilder.Ticks
  id: Ticks
  parent: NodaTime.PeriodBuilder
  langs:
  - csharp
  - vb
  name: Ticks
  nameWithType: PeriodBuilder.Ticks
  fullName: NodaTime.PeriodBuilder.Ticks
  type: Property
  source:
    remote:
      path: 2.2.x/src/NodaTime/PeriodBuilder.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Ticks
    path: src/NodaTime/PeriodBuilder.cs
    startLine: 80
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nGets or sets the number of ticks within the period.\n"
  example: []
  syntax:
    content: public long Ticks { get; set; }
    parameters: []
    return:
      type: System.Int64
      description: The number of ticks within the period.
    content.vb: Public Property Ticks As Long
  overload: NodaTime.PeriodBuilder.Ticks*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NodaTime.PeriodBuilder.Nanoseconds
  commentId: P:NodaTime.PeriodBuilder.Nanoseconds
  id: Nanoseconds
  parent: NodaTime.PeriodBuilder
  langs:
  - csharp
  - vb
  name: Nanoseconds
  nameWithType: PeriodBuilder.Nanoseconds
  fullName: NodaTime.PeriodBuilder.Nanoseconds
  type: Property
  source:
    remote:
      path: 2.2.x/src/NodaTime/PeriodBuilder.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Nanoseconds
    path: src/NodaTime/PeriodBuilder.cs
    startLine: 86
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nGets or sets the number of nanoseconds within the period.\n"
  example: []
  syntax:
    content: public long Nanoseconds { get; set; }
    parameters: []
    return:
      type: System.Int64
      description: The number of nanoseconds within the period.
    content.vb: Public Property Nanoseconds As Long
  overload: NodaTime.PeriodBuilder.Nanoseconds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NodaTime.PeriodBuilder.#ctor
  commentId: M:NodaTime.PeriodBuilder.#ctor
  id: '#ctor'
  parent: NodaTime.PeriodBuilder
  langs:
  - csharp
  - vb
  name: PeriodBuilder()
  nameWithType: PeriodBuilder.PeriodBuilder()
  fullName: NodaTime.PeriodBuilder.PeriodBuilder()
  type: Constructor
  source:
    remote:
      path: 2.2.x/src/NodaTime/PeriodBuilder.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: .ctor
    path: src/NodaTime/PeriodBuilder.cs
    startLine: 92
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nCreates a new period builder with an initially zero period.\n"
  example: []
  syntax:
    content: public PeriodBuilder()
    content.vb: Public Sub New
  overload: NodaTime.PeriodBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NodaTime.PeriodBuilder.#ctor(NodaTime.Period)
  commentId: M:NodaTime.PeriodBuilder.#ctor(NodaTime.Period)
  id: '#ctor(NodaTime.Period)'
  parent: NodaTime.PeriodBuilder
  langs:
  - csharp
  - vb
  name: PeriodBuilder(Period)
  nameWithType: PeriodBuilder.PeriodBuilder(Period)
  fullName: NodaTime.PeriodBuilder.PeriodBuilder(NodaTime.Period)
  type: Constructor
  source:
    remote:
      path: 2.2.x/src/NodaTime/PeriodBuilder.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: .ctor
    path: src/NodaTime/PeriodBuilder.cs
    startLine: 102
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nCreates a new period builder with the values from an existing\nperiod. Calling this constructor instead of <xref href=\"NodaTime.Period.ToBuilder\" data-throw-if-not-resolved=\"false\"></xref>\nallows object initializers to be used.\n"
  example: []
  syntax:
    content: public PeriodBuilder(Period period)
    parameters:
    - id: period
      type: NodaTime.Period
      description: An existing period to copy values from.
    content.vb: Public Sub New(period As Period)
  overload: NodaTime.PeriodBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NodaTime.PeriodBuilder.Item(NodaTime.PeriodUnits)
  commentId: P:NodaTime.PeriodBuilder.Item(NodaTime.PeriodUnits)
  id: Item(NodaTime.PeriodUnits)
  parent: NodaTime.PeriodBuilder
  langs:
  - csharp
  - vb
  name: Item[PeriodUnits]
  nameWithType: PeriodBuilder.Item[PeriodUnits]
  fullName: NodaTime.PeriodBuilder.Item[NodaTime.PeriodUnits]
  type: Property
  source:
    remote:
      path: 2.2.x/src/NodaTime/PeriodBuilder.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: this[]
    path: src/NodaTime/PeriodBuilder.cs
    startLine: 134
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nGets or sets the value of a single unit.\n"
  remarks: "\n<p>\nThe type of this indexer is <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> for uniformity, but any date unit (year, month, week, day) will only ever have a value\nin the range of <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\nFor the <xref href=\"NodaTime.PeriodUnits.Nanoseconds\" data-throw-if-not-resolved=\"false\"></xref> unit, the value is converted to <code>Int64</code> when reading from the indexer, causing it to\nfail if the value is out of range (around 250 years). To access the values of very large numbers of nanoseconds, use the <xref href=\"NodaTime.PeriodBuilder.Nanoseconds\" data-throw-if-not-resolved=\"false\"></xref>\nproperty directly.\n</p>\n"
  example: []
  syntax:
    content: public long this[PeriodUnits unit] { get; set; }
    parameters:
    - id: unit
      type: NodaTime.PeriodUnits
      description: A single value within the <xref href="NodaTime.PeriodUnits" data-throw-if-not-resolved="false"></xref> enumeration.
    return:
      type: System.Int64
      description: The value of the given unit within this period builder, or zero if the unit is unset.
    content.vb: Public Property Item(unit As PeriodUnits) As Long
  overload: NodaTime.PeriodBuilder.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code data-dev-comment-type="paramref" class="paramref">unit</code> is not a single unit, or a value is provided for a date unit which is outside the range of <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: PeriodBuilder.Item(PeriodUnits)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: NodaTime.PeriodBuilder.Item(NodaTime.PeriodUnits)
  name.vb: Item(PeriodUnits)
- uid: NodaTime.PeriodBuilder.Build
  commentId: M:NodaTime.PeriodBuilder.Build
  id: Build
  parent: NodaTime.PeriodBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: PeriodBuilder.Build()
  fullName: NodaTime.PeriodBuilder.Build()
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime/PeriodBuilder.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Build
    path: src/NodaTime/PeriodBuilder.cs
    startLine: 180
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nBuilds a period from the properties in this builder.\n"
  example: []
  syntax:
    content: public Period Build()
    return:
      type: NodaTime.Period
      description: A period containing the values from this builder.
    content.vb: Public Function Build As Period
  overload: NodaTime.PeriodBuilder.Build*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NodaTime.PeriodBuilder.System#Xml#Serialization#IXmlSerializable#GetSchema
  commentId: M:NodaTime.PeriodBuilder.System#Xml#Serialization#IXmlSerializable#GetSchema
  id: System#Xml#Serialization#IXmlSerializable#GetSchema
  isEii: true
  parent: NodaTime.PeriodBuilder
  langs:
  - csharp
  - vb
  name: IXmlSerializable.GetSchema()
  nameWithType: PeriodBuilder.IXmlSerializable.GetSchema()
  fullName: NodaTime.PeriodBuilder.System.Xml.Serialization.IXmlSerializable.GetSchema()
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime/PeriodBuilder.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: System.Xml.Serialization.IXmlSerializable.GetSchema
    path: src/NodaTime/PeriodBuilder.cs
    startLine: 184
  assemblies:
  - NodaTime
  namespace: NodaTime
  example: []
  syntax:
    content: XmlSchema IXmlSerializable.GetSchema()
    return:
      type: System.Xml.Schema.XmlSchema
    content.vb: Function System.Xml.Serialization.IXmlSerializable.GetSchema As XmlSchema Implements IXmlSerializable.GetSchema
  overload: NodaTime.PeriodBuilder.System#Xml#Serialization#IXmlSerializable#GetSchema*
  implements:
  - System.Xml.Serialization.IXmlSerializable.GetSchema
  nameWithType.vb: PeriodBuilder.System.Xml.Serialization.IXmlSerializable.GetSchema()
  name.vb: System.Xml.Serialization.IXmlSerializable.GetSchema()
- uid: NodaTime.PeriodBuilder.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  commentId: M:NodaTime.PeriodBuilder.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  isEii: true
  parent: NodaTime.PeriodBuilder
  langs:
  - csharp
  - vb
  name: IXmlSerializable.ReadXml(XmlReader)
  nameWithType: PeriodBuilder.IXmlSerializable.ReadXml(XmlReader)
  fullName: NodaTime.PeriodBuilder.System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime/PeriodBuilder.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: System.Xml.Serialization.IXmlSerializable.ReadXml
    path: src/NodaTime/PeriodBuilder.cs
    startLine: 187
  assemblies:
  - NodaTime
  namespace: NodaTime
  example: []
  syntax:
    content: void IXmlSerializable.ReadXml(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
    content.vb: Sub System.Xml.Serialization.IXmlSerializable.ReadXml(reader As XmlReader) Implements IXmlSerializable.ReadXml
  overload: NodaTime.PeriodBuilder.System#Xml#Serialization#IXmlSerializable#ReadXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  nameWithType.vb: PeriodBuilder.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  name.vb: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
- uid: NodaTime.PeriodBuilder.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  commentId: M:NodaTime.PeriodBuilder.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  isEii: true
  parent: NodaTime.PeriodBuilder
  langs:
  - csharp
  - vb
  name: IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: PeriodBuilder.IXmlSerializable.WriteXml(XmlWriter)
  fullName: NodaTime.PeriodBuilder.System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime/PeriodBuilder.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: System.Xml.Serialization.IXmlSerializable.WriteXml
    path: src/NodaTime/PeriodBuilder.cs
    startLine: 204
  assemblies:
  - NodaTime
  namespace: NodaTime
  example: []
  syntax:
    content: void IXmlSerializable.WriteXml(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
    content.vb: Sub System.Xml.Serialization.IXmlSerializable.WriteXml(writer As XmlWriter) Implements IXmlSerializable.WriteXml
  overload: NodaTime.PeriodBuilder.System#Xml#Serialization#IXmlSerializable#WriteXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  nameWithType.vb: PeriodBuilder.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  name.vb: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
references:
- uid: NodaTime.Period
  commentId: T:NodaTime.Period
  parent: NodaTime
  name: Period
  nameWithType: Period
  fullName: NodaTime.Period
- uid: NodaTime.PeriodBuilder.Build
  commentId: M:NodaTime.PeriodBuilder.Build
  isExternal: true
- uid: NodaTime
  commentId: N:NodaTime
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: true
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: NodaTime.PeriodBuilder.Years*
  commentId: Overload:NodaTime.PeriodBuilder.Years
  name: Years
  nameWithType: PeriodBuilder.Years
  fullName: NodaTime.PeriodBuilder.Years
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NodaTime.PeriodBuilder.Months*
  commentId: Overload:NodaTime.PeriodBuilder.Months
  name: Months
  nameWithType: PeriodBuilder.Months
  fullName: NodaTime.PeriodBuilder.Months
- uid: NodaTime.PeriodBuilder.Weeks*
  commentId: Overload:NodaTime.PeriodBuilder.Weeks
  name: Weeks
  nameWithType: PeriodBuilder.Weeks
  fullName: NodaTime.PeriodBuilder.Weeks
- uid: NodaTime.PeriodBuilder.Days*
  commentId: Overload:NodaTime.PeriodBuilder.Days
  name: Days
  nameWithType: PeriodBuilder.Days
  fullName: NodaTime.PeriodBuilder.Days
- uid: NodaTime.PeriodBuilder.Hours*
  commentId: Overload:NodaTime.PeriodBuilder.Hours
  name: Hours
  nameWithType: PeriodBuilder.Hours
  fullName: NodaTime.PeriodBuilder.Hours
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: NodaTime.PeriodBuilder.Minutes*
  commentId: Overload:NodaTime.PeriodBuilder.Minutes
  name: Minutes
  nameWithType: PeriodBuilder.Minutes
  fullName: NodaTime.PeriodBuilder.Minutes
- uid: NodaTime.PeriodBuilder.Seconds*
  commentId: Overload:NodaTime.PeriodBuilder.Seconds
  name: Seconds
  nameWithType: PeriodBuilder.Seconds
  fullName: NodaTime.PeriodBuilder.Seconds
- uid: NodaTime.PeriodBuilder.Milliseconds*
  commentId: Overload:NodaTime.PeriodBuilder.Milliseconds
  name: Milliseconds
  nameWithType: PeriodBuilder.Milliseconds
  fullName: NodaTime.PeriodBuilder.Milliseconds
- uid: NodaTime.PeriodBuilder.Ticks*
  commentId: Overload:NodaTime.PeriodBuilder.Ticks
  name: Ticks
  nameWithType: PeriodBuilder.Ticks
  fullName: NodaTime.PeriodBuilder.Ticks
- uid: NodaTime.PeriodBuilder.Nanoseconds*
  commentId: Overload:NodaTime.PeriodBuilder.Nanoseconds
  name: Nanoseconds
  nameWithType: PeriodBuilder.Nanoseconds
  fullName: NodaTime.PeriodBuilder.Nanoseconds
- uid: NodaTime.PeriodBuilder.#ctor*
  commentId: Overload:NodaTime.PeriodBuilder.#ctor
  name: PeriodBuilder
  nameWithType: PeriodBuilder.PeriodBuilder
  fullName: NodaTime.PeriodBuilder.PeriodBuilder
- uid: NodaTime.Period.ToBuilder
  commentId: M:NodaTime.Period.ToBuilder
  isExternal: true
- uid: NodaTime.PeriodUnits.Nanoseconds
  commentId: F:NodaTime.PeriodUnits.Nanoseconds
  isExternal: true
- uid: NodaTime.PeriodBuilder.Nanoseconds
  commentId: P:NodaTime.PeriodBuilder.Nanoseconds
  isExternal: true
- uid: NodaTime.PeriodUnits
  commentId: T:NodaTime.PeriodUnits
  parent: NodaTime
  name: PeriodUnits
  nameWithType: PeriodUnits
  fullName: NodaTime.PeriodUnits
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  parent: System
  isExternal: true
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: NodaTime.PeriodBuilder.Item*
  commentId: Overload:NodaTime.PeriodBuilder.Item
  name: Item
  nameWithType: PeriodBuilder.Item
  fullName: NodaTime.PeriodBuilder.Item
- uid: NodaTime.PeriodBuilder.Build*
  commentId: Overload:NodaTime.PeriodBuilder.Build
  name: Build
  nameWithType: PeriodBuilder.Build
  fullName: NodaTime.PeriodBuilder.Build
- uid: NodaTime.PeriodBuilder.System#Xml#Serialization#IXmlSerializable#GetSchema*
  commentId: Overload:NodaTime.PeriodBuilder.System#Xml#Serialization#IXmlSerializable#GetSchema
  name: IXmlSerializable.GetSchema
  nameWithType: PeriodBuilder.IXmlSerializable.GetSchema
  fullName: NodaTime.PeriodBuilder.System.Xml.Serialization.IXmlSerializable.GetSchema
  nameWithType.vb: PeriodBuilder.System.Xml.Serialization.IXmlSerializable.GetSchema
  name.vb: System.Xml.Serialization.IXmlSerializable.GetSchema
- uid: System.Xml.Serialization.IXmlSerializable.GetSchema
  commentId: M:System.Xml.Serialization.IXmlSerializable.GetSchema
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: GetSchema()
  nameWithType: IXmlSerializable.GetSchema()
  fullName: System.Xml.Serialization.IXmlSerializable.GetSchema()
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Schema.XmlSchema
  commentId: T:System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema
  commentId: N:System.Xml.Schema
  isExternal: true
  name: System.Xml.Schema
  nameWithType: System.Xml.Schema
  fullName: System.Xml.Schema
- uid: NodaTime.PeriodBuilder.System#Xml#Serialization#IXmlSerializable#ReadXml*
  commentId: Overload:NodaTime.PeriodBuilder.System#Xml#Serialization#IXmlSerializable#ReadXml
  name: IXmlSerializable.ReadXml
  nameWithType: PeriodBuilder.IXmlSerializable.ReadXml
  fullName: NodaTime.PeriodBuilder.System.Xml.Serialization.IXmlSerializable.ReadXml
  nameWithType.vb: PeriodBuilder.System.Xml.Serialization.IXmlSerializable.ReadXml
  name.vb: System.Xml.Serialization.IXmlSerializable.ReadXml
- uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: ReadXml(XmlReader)
  nameWithType: IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: NodaTime.PeriodBuilder.System#Xml#Serialization#IXmlSerializable#WriteXml*
  commentId: Overload:NodaTime.PeriodBuilder.System#Xml#Serialization#IXmlSerializable#WriteXml
  name: IXmlSerializable.WriteXml
  nameWithType: PeriodBuilder.IXmlSerializable.WriteXml
  fullName: NodaTime.PeriodBuilder.System.Xml.Serialization.IXmlSerializable.WriteXml
  nameWithType.vb: PeriodBuilder.System.Xml.Serialization.IXmlSerializable.WriteXml
  name.vb: System.Xml.Serialization.IXmlSerializable.WriteXml
- uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
shouldSkipMarkup: true
