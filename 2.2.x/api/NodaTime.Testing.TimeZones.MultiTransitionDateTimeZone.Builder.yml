### YamlMime:ManagedReference
items:
- uid: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder
  commentId: T:NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder
  id: MultiTransitionDateTimeZone.Builder
  parent: NodaTime.Testing.TimeZones
  children:
  - NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.#ctor
  - NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.#ctor(System.Int32,System.Int32)
  - NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.#ctor(System.Int32,System.Int32,System.String)
  - NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.#ctor(System.Int32,System.String)
  - NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Add(NodaTime.Instant,System.Int32)
  - NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Add(NodaTime.Instant,System.Int32,System.Int32)
  - NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Add(NodaTime.Instant,System.Int32,System.Int32,System.String)
  - NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Build
  - NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Id
  - NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: MultiTransitionDateTimeZone.Builder
  nameWithType: MultiTransitionDateTimeZone.Builder
  fullName: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder
  type: Class
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/TimeZones/MultiTransitionDateTimeZone.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Builder
    path: src/NodaTime.Testing/TimeZones/MultiTransitionDateTimeZone.cs
    startLine: 69
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.TimeZones
  summary: "\nBuilder to create instances of <xref href=\"NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone\" data-throw-if-not-resolved=\"false\"></xref>. Each builder\ncan only be built once.\n"
  example: []
  syntax:
    content: 'public sealed class Builder : IEnumerable'
    content.vb: >-
      Public NotInheritable Class Builder
          Implements IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Id
  commentId: P:NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Id
  id: Id
  parent: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: MultiTransitionDateTimeZone.Builder.Id
  fullName: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Id
  type: Property
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/TimeZones/MultiTransitionDateTimeZone.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Id
    path: src/NodaTime.Testing/TimeZones/MultiTransitionDateTimeZone.cs
    startLine: 81
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.TimeZones
  summary: "\nGets the ID of the time zone which will be built.\n"
  example: []
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
      description: The ID of the time zone which will be built.
    content.vb: Public Property Id As String
  overload: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.#ctor
  commentId: M:NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.#ctor
  id: '#ctor'
  parent: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder
  langs:
  - csharp
  - vb
  name: Builder()
  nameWithType: MultiTransitionDateTimeZone.Builder.Builder()
  fullName: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Builder()
  type: Constructor
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/TimeZones/MultiTransitionDateTimeZone.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: .ctor
    path: src/NodaTime.Testing/TimeZones/MultiTransitionDateTimeZone.cs
    startLine: 87
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.TimeZones
  summary: "\nConstructs a builder using an ID of &quot;MultiZone&quot;, an initial offset of zero (standard and savings),\nand an initial name of &quot;First&quot;.\n"
  example: []
  syntax:
    content: public Builder()
    content.vb: Public Sub New
  overload: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.#ctor(System.Int32,System.String)
  commentId: M:NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.#ctor(System.Int32,System.String)
  id: '#ctor(System.Int32,System.String)'
  parent: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder
  langs:
  - csharp
  - vb
  name: Builder(Int32, String)
  nameWithType: MultiTransitionDateTimeZone.Builder.Builder(Int32, String)
  fullName: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Builder(System.Int32, System.String)
  type: Constructor
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/TimeZones/MultiTransitionDateTimeZone.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: .ctor
    path: src/NodaTime.Testing/TimeZones/MultiTransitionDateTimeZone.cs
    startLine: 97
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.TimeZones
  summary: "\nConstructs a builder using the given first name, standard offset, and a daylight saving\noffset of 0. The ID is initially &quot;MultiZone&quot;.\n"
  example: []
  syntax:
    content: public Builder(int firstOffsetHours, string firstName)
    parameters:
    - id: firstOffsetHours
      type: System.Int32
      description: Standard offset in hours in the first zone interval.
    - id: firstName
      type: System.String
      description: Name of the first zone interval.
    content.vb: Public Sub New(firstOffsetHours As Integer, firstName As String)
  overload: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.#ctor(System.Int32,System.Int32)
  commentId: M:NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder
  langs:
  - csharp
  - vb
  name: Builder(Int32, Int32)
  nameWithType: MultiTransitionDateTimeZone.Builder.Builder(Int32, Int32)
  fullName: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Builder(System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/TimeZones/MultiTransitionDateTimeZone.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: .ctor
    path: src/NodaTime.Testing/TimeZones/MultiTransitionDateTimeZone.cs
    startLine: 107
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.TimeZones
  summary: "\nConstructs a builder using the given standard offset and saving offset. The ID is initially &quot;MultiZone&quot;.\n"
  example: []
  syntax:
    content: public Builder(int firstStandardOffsetHours, int firstSavingOffsetHours)
    parameters:
    - id: firstStandardOffsetHours
      type: System.Int32
      description: Standard offset in hours in the first zone interval.
    - id: firstSavingOffsetHours
      type: System.Int32
      description: Standard offset in hours in the first zone interval.
    content.vb: Public Sub New(firstStandardOffsetHours As Integer, firstSavingOffsetHours As Integer)
  overload: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.#ctor(System.Int32,System.Int32,System.String)
  commentId: M:NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.#ctor(System.Int32,System.Int32,System.String)
  id: '#ctor(System.Int32,System.Int32,System.String)'
  parent: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder
  langs:
  - csharp
  - vb
  name: Builder(Int32, Int32, String)
  nameWithType: MultiTransitionDateTimeZone.Builder.Builder(Int32, Int32, String)
  fullName: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Builder(System.Int32, System.Int32, System.String)
  type: Constructor
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/TimeZones/MultiTransitionDateTimeZone.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: .ctor
    path: src/NodaTime.Testing/TimeZones/MultiTransitionDateTimeZone.cs
    startLine: 119
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.TimeZones
  summary: "\nConstructs a builder using the given first name, standard offset, and daylight saving offset.\nThe ID is initially &quot;MultiZone&quot;.\n"
  example: []
  syntax:
    content: public Builder(int firstStandardOffsetHours, int firstSavingOffsetHours, string firstName)
    parameters:
    - id: firstStandardOffsetHours
      type: System.Int32
      description: Standard offset in hours in the first zone interval.
    - id: firstSavingOffsetHours
      type: System.Int32
      description: Daylight saving offset in hours in the first zone interval.
    - id: firstName
      type: System.String
      description: Name of the first zone interval.
    content.vb: Public Sub New(firstStandardOffsetHours As Integer, firstSavingOffsetHours As Integer, firstName As String)
  overload: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Add(NodaTime.Instant,System.Int32)
  commentId: M:NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Add(NodaTime.Instant,System.Int32)
  id: Add(NodaTime.Instant,System.Int32)
  parent: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder
  langs:
  - csharp
  - vb
  name: Add(Instant, Int32)
  nameWithType: MultiTransitionDateTimeZone.Builder.Add(Instant, Int32)
  fullName: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Add(NodaTime.Instant, System.Int32)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/TimeZones/MultiTransitionDateTimeZone.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Add
    path: src/NodaTime.Testing/TimeZones/MultiTransitionDateTimeZone.cs
    startLine: 133
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.TimeZones
  summary: "\nAdds a transition at the given instant, to the specified new standard offset,\nwith no daylight saving. The name is generated from the transition.\n"
  example: []
  syntax:
    content: public void Add(Instant transition, int newStandardOffsetHours)
    parameters:
    - id: transition
      type: NodaTime.Instant
      description: Instant at which the zone changes.
    - id: newStandardOffsetHours
      type: System.Int32
      description: The new standard offset, in hours.
    content.vb: Public Sub Add(transition As Instant, newStandardOffsetHours As Integer)
  overload: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Add(NodaTime.Instant,System.Int32,System.Int32)
  commentId: M:NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Add(NodaTime.Instant,System.Int32,System.Int32)
  id: Add(NodaTime.Instant,System.Int32,System.Int32)
  parent: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder
  langs:
  - csharp
  - vb
  name: Add(Instant, Int32, Int32)
  nameWithType: MultiTransitionDateTimeZone.Builder.Add(Instant, Int32, Int32)
  fullName: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Add(NodaTime.Instant, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/TimeZones/MultiTransitionDateTimeZone.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Add
    path: src/NodaTime.Testing/TimeZones/MultiTransitionDateTimeZone.cs
    startLine: 145
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.TimeZones
  summary: "\nAdds a transition at the given instant, to the specified new standard offset,\nwith the new specified daylight saving. The name is generated from the transition.\n"
  example: []
  syntax:
    content: public void Add(Instant transition, int newStandardOffsetHours, int newSavingOffsetHours)
    parameters:
    - id: transition
      type: NodaTime.Instant
      description: Instant at which the zone changes.
    - id: newStandardOffsetHours
      type: System.Int32
      description: The new standard offset, in hours.
    - id: newSavingOffsetHours
      type: System.Int32
      description: The new daylight saving offset, in hours.
    content.vb: Public Sub Add(transition As Instant, newStandardOffsetHours As Integer, newSavingOffsetHours As Integer)
  overload: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Add(NodaTime.Instant,System.Int32,System.Int32,System.String)
  commentId: M:NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Add(NodaTime.Instant,System.Int32,System.Int32,System.String)
  id: Add(NodaTime.Instant,System.Int32,System.Int32,System.String)
  parent: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder
  langs:
  - csharp
  - vb
  name: Add(Instant, Int32, Int32, String)
  nameWithType: MultiTransitionDateTimeZone.Builder.Add(Instant, Int32, Int32, String)
  fullName: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Add(NodaTime.Instant, System.Int32, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/TimeZones/MultiTransitionDateTimeZone.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Add
    path: src/NodaTime.Testing/TimeZones/MultiTransitionDateTimeZone.cs
    startLine: 158
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.TimeZones
  summary: "\nAdds a transition at the given instant, to the specified new standard offset,\nwith the new specified daylight saving. The name is generated from the transition.\n"
  example: []
  syntax:
    content: public void Add(Instant transition, int newStandardOffsetHours, int newSavingOffsetHours, string newName)
    parameters:
    - id: transition
      type: NodaTime.Instant
      description: Instant at which the zone changes.
    - id: newStandardOffsetHours
      type: System.Int32
      description: The new standard offset, in hours.
    - id: newSavingOffsetHours
      type: System.Int32
      description: The new daylight saving offset, in hours.
    - id: newName
      type: System.String
      description: The new zone interval name.
    content.vb: Public Sub Add(transition As Instant, newStandardOffsetHours As Integer, newSavingOffsetHours As Integer, newName As String)
  overload: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Build
  commentId: M:NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Build
  id: Build
  parent: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: MultiTransitionDateTimeZone.Builder.Build()
  fullName: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Build()
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/TimeZones/MultiTransitionDateTimeZone.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Build
    path: src/NodaTime.Testing/TimeZones/MultiTransitionDateTimeZone.cs
    startLine: 173
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.TimeZones
  summary: "\nBuilds a <xref href=\"NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone\" data-throw-if-not-resolved=\"false\"></xref> from this builder, invalidating it in the process.\n"
  example: []
  syntax:
    content: public MultiTransitionDateTimeZone Build()
    return:
      type: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone
      description: The newly-built zone.
    content.vb: Public Function Build As MultiTransitionDateTimeZone
  overload: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Build*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.System#Collections#IEnumerable#GetEnumerator
  commentId: M:NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: MultiTransitionDateTimeZone.Builder.IEnumerable.GetEnumerator()
  fullName: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/TimeZones/MultiTransitionDateTimeZone.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/NodaTime.Testing/TimeZones/MultiTransitionDateTimeZone.cs
    startLine: 193
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.TimeZones
  summary: "\nWe don&apos;t *really* want to implement this, but we want the collection initializer...\n"
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: MultiTransitionDateTimeZone.Builder.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone
  commentId: T:NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone
  parent: NodaTime.Testing.TimeZones
  name: MultiTransitionDateTimeZone
  nameWithType: MultiTransitionDateTimeZone
  fullName: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone
- uid: NodaTime.Testing.TimeZones
  commentId: N:NodaTime.Testing.TimeZones
  name: NodaTime.Testing.TimeZones
  nameWithType: NodaTime.Testing.TimeZones
  fullName: NodaTime.Testing.TimeZones
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Id*
  commentId: Overload:NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Id
  name: Id
  nameWithType: MultiTransitionDateTimeZone.Builder.Id
  fullName: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.#ctor*
  commentId: Overload:NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.#ctor
  name: Builder
  nameWithType: MultiTransitionDateTimeZone.Builder.Builder
  fullName: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Builder
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Add*
  commentId: Overload:NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Add
  name: Add
  nameWithType: MultiTransitionDateTimeZone.Builder.Add
  fullName: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Add
- uid: NodaTime.Instant
  commentId: T:NodaTime.Instant
  parent: NodaTime
  name: Instant
  nameWithType: Instant
  fullName: NodaTime.Instant
- uid: NodaTime
  commentId: N:NodaTime
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Build*
  commentId: Overload:NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Build
  name: Build
  nameWithType: MultiTransitionDateTimeZone.Builder.Build
  fullName: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.Build
- uid: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: MultiTransitionDateTimeZone.Builder.IEnumerable.GetEnumerator
  fullName: NodaTime.Testing.TimeZones.MultiTransitionDateTimeZone.Builder.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: MultiTransitionDateTimeZone.Builder.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
shouldSkipMarkup: true
