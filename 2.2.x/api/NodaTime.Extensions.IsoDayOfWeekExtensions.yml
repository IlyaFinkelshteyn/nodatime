### YamlMime:ManagedReference
items:
- uid: NodaTime.Extensions.IsoDayOfWeekExtensions
  commentId: T:NodaTime.Extensions.IsoDayOfWeekExtensions
  id: IsoDayOfWeekExtensions
  parent: NodaTime.Extensions
  children:
  - NodaTime.Extensions.IsoDayOfWeekExtensions.ToDayOfWeek(NodaTime.IsoDayOfWeek)
  - NodaTime.Extensions.IsoDayOfWeekExtensions.ToIsoDayOfWeek(NodaTime.IsoDayOfWeek)
  langs:
  - csharp
  - vb
  name: IsoDayOfWeekExtensions
  nameWithType: IsoDayOfWeekExtensions
  fullName: NodaTime.Extensions.IsoDayOfWeekExtensions
  type: Class
  source:
    remote:
      path: 2.2.x/src/NodaTime/Extensions/IsoDayOfWeekExtensions.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: IsoDayOfWeekExtensions
    path: src/NodaTime/Extensions/IsoDayOfWeekExtensions.cs
    startLine: 13
  assemblies:
  - NodaTime
  namespace: NodaTime.Extensions
  summary: "\nExtension methods \n"
  example: []
  syntax:
    content: public static class IsoDayOfWeekExtensions
    content.vb: Public Module IsoDayOfWeekExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: NodaTime.Extensions.IsoDayOfWeekExtensions.ToIsoDayOfWeek(NodaTime.IsoDayOfWeek)
  commentId: M:NodaTime.Extensions.IsoDayOfWeekExtensions.ToIsoDayOfWeek(NodaTime.IsoDayOfWeek)
  id: ToIsoDayOfWeek(NodaTime.IsoDayOfWeek)
  isExtensionMethod: true
  parent: NodaTime.Extensions.IsoDayOfWeekExtensions
  langs:
  - csharp
  - vb
  name: ToIsoDayOfWeek(IsoDayOfWeek)
  nameWithType: IsoDayOfWeekExtensions.ToIsoDayOfWeek(IsoDayOfWeek)
  fullName: NodaTime.Extensions.IsoDayOfWeekExtensions.ToIsoDayOfWeek(NodaTime.IsoDayOfWeek)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime/Extensions/IsoDayOfWeekExtensions.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: ToIsoDayOfWeek
    path: src/NodaTime/Extensions/IsoDayOfWeekExtensions.cs
    startLine: 21
  assemblies:
  - NodaTime
  namespace: NodaTime.Extensions
  summary: "\nConverts a <xref href=\"NodaTime.IsoDayOfWeek\" data-throw-if-not-resolved=\"false\"></xref> into the corresponding <xref href=\"System.DayOfWeek\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: This is a convenience method which calls <xref href="NodaTime.Utility.BclConversions.ToDayOfWeek(NodaTime.IsoDayOfWeek)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [Obsolete("This method was incorrectly named. Use ToDayOfWeek instead")]

      public static DayOfWeek ToIsoDayOfWeek(this IsoDayOfWeek isoDayOfWeek)
    parameters:
    - id: isoDayOfWeek
      type: NodaTime.IsoDayOfWeek
      description: The <code>IsoDayOfWeek</code> to convert.
    return:
      type: System.DayOfWeek
      description: The <code>DayOfWeek</code> equivalent to <code data-dev-comment-type="paramref" class="paramref">isoDayOfWeek</code>
    content.vb: >-
      <Obsolete("This method was incorrectly named. Use ToDayOfWeek instead")>

      <ExtensionAttribute>

      Public Shared Function ToIsoDayOfWeek(isoDayOfWeek As IsoDayOfWeek) As DayOfWeek
  overload: NodaTime.Extensions.IsoDayOfWeekExtensions.ToIsoDayOfWeek*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method was incorrectly named. Use ToDayOfWeek instead
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Extensions.IsoDayOfWeekExtensions.ToDayOfWeek(NodaTime.IsoDayOfWeek)
  commentId: M:NodaTime.Extensions.IsoDayOfWeekExtensions.ToDayOfWeek(NodaTime.IsoDayOfWeek)
  id: ToDayOfWeek(NodaTime.IsoDayOfWeek)
  isExtensionMethod: true
  parent: NodaTime.Extensions.IsoDayOfWeekExtensions
  langs:
  - csharp
  - vb
  name: ToDayOfWeek(IsoDayOfWeek)
  nameWithType: IsoDayOfWeekExtensions.ToDayOfWeek(IsoDayOfWeek)
  fullName: NodaTime.Extensions.IsoDayOfWeekExtensions.ToDayOfWeek(NodaTime.IsoDayOfWeek)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime/Extensions/IsoDayOfWeekExtensions.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: ToDayOfWeek
    path: src/NodaTime/Extensions/IsoDayOfWeekExtensions.cs
    startLine: 31
  assemblies:
  - NodaTime
  namespace: NodaTime.Extensions
  summary: "\nConverts a <xref href=\"NodaTime.IsoDayOfWeek\" data-throw-if-not-resolved=\"false\"></xref> into the corresponding <xref href=\"System.DayOfWeek\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: This is a convenience method which calls <xref href="NodaTime.Utility.BclConversions.ToDayOfWeek(NodaTime.IsoDayOfWeek)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static DayOfWeek ToDayOfWeek(this IsoDayOfWeek isoDayOfWeek)
    parameters:
    - id: isoDayOfWeek
      type: NodaTime.IsoDayOfWeek
      description: The <code>IsoDayOfWeek</code> to convert.
    return:
      type: System.DayOfWeek
      description: The <code>DayOfWeek</code> equivalent to <code data-dev-comment-type="paramref" class="paramref">isoDayOfWeek</code>
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToDayOfWeek(isoDayOfWeek As IsoDayOfWeek) As DayOfWeek
  overload: NodaTime.Extensions.IsoDayOfWeekExtensions.ToDayOfWeek*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: NodaTime.Extensions
  commentId: N:NodaTime.Extensions
  name: NodaTime.Extensions
  nameWithType: NodaTime.Extensions
  fullName: NodaTime.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NodaTime.IsoDayOfWeek
  commentId: T:NodaTime.IsoDayOfWeek
  parent: NodaTime
  name: IsoDayOfWeek
  nameWithType: IsoDayOfWeek
  fullName: NodaTime.IsoDayOfWeek
- uid: System.DayOfWeek
  commentId: T:System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: NodaTime.Utility.BclConversions.ToDayOfWeek(NodaTime.IsoDayOfWeek)
  commentId: M:NodaTime.Utility.BclConversions.ToDayOfWeek(NodaTime.IsoDayOfWeek)
  isExternal: true
- uid: NodaTime.Extensions.IsoDayOfWeekExtensions.ToIsoDayOfWeek*
  commentId: Overload:NodaTime.Extensions.IsoDayOfWeekExtensions.ToIsoDayOfWeek
  name: ToIsoDayOfWeek
  nameWithType: IsoDayOfWeekExtensions.ToIsoDayOfWeek
  fullName: NodaTime.Extensions.IsoDayOfWeekExtensions.ToIsoDayOfWeek
- uid: NodaTime
  commentId: N:NodaTime
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: NodaTime.Extensions.IsoDayOfWeekExtensions.ToDayOfWeek*
  commentId: Overload:NodaTime.Extensions.IsoDayOfWeekExtensions.ToDayOfWeek
  name: ToDayOfWeek
  nameWithType: IsoDayOfWeekExtensions.ToDayOfWeek
  fullName: NodaTime.Extensions.IsoDayOfWeekExtensions.ToDayOfWeek
shouldSkipMarkup: true
