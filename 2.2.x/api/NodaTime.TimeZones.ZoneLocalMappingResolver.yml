### YamlMime:ManagedReference
items:
- uid: NodaTime.TimeZones.ZoneLocalMappingResolver
  commentId: T:NodaTime.TimeZones.ZoneLocalMappingResolver
  id: ZoneLocalMappingResolver
  parent: NodaTime.TimeZones
  children: []
  langs:
  - csharp
  - vb
  name: ZoneLocalMappingResolver
  nameWithType: ZoneLocalMappingResolver
  fullName: NodaTime.TimeZones.ZoneLocalMappingResolver
  type: Delegate
  source:
    remote:
      path: 2.2.x/src/NodaTime/TimeZones/Delegates.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: ZoneLocalMappingResolver
    path: src/NodaTime/TimeZones/Delegates.cs
    startLine: 87
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: "\nResolves the result of attempting to map a local date and time to a target time zone.\n"
  remarks: "\n<p>\nThis delegate is consumed by <xref href=\"NodaTime.LocalDateTime.InZone(NodaTime.DateTimeZone%2cNodaTime.TimeZones.ZoneLocalMappingResolver)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"NodaTime.DateTimeZone.ResolveLocal(NodaTime.LocalDateTime%2cNodaTime.TimeZones.ZoneLocalMappingResolver)\" data-throw-if-not-resolved=\"false\"></xref>,\namong others. It provides the strategy for converting a <xref href=\"NodaTime.TimeZones.ZoneLocalMapping\" data-throw-if-not-resolved=\"false\"></xref> (the result of attempting\nto map a local date and time to a target time zone) to a <xref href=\"NodaTime.ZonedDateTime\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>See the <xref href=\"NodaTime.TimeZones.Resolvers\" data-throw-if-not-resolved=\"false\"></xref> class for predefined implementations and a way of combining\nseparate <xref href=\"NodaTime.TimeZones.SkippedTimeResolver\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"NodaTime.TimeZones.AmbiguousTimeResolver\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  example: []
  syntax:
    content: public delegate ZonedDateTime ZoneLocalMappingResolver(ZoneLocalMapping mapping);
    parameters:
    - id: mapping
      type: NodaTime.TimeZones.ZoneLocalMapping
      description: The intermediate result of mapping a local time to a target time zone.
    return:
      type: NodaTime.ZonedDateTime
      description: A <xref href="NodaTime.ZonedDateTime" data-throw-if-not-resolved="false"></xref> in the target time zone.
    content.vb: Public Delegate Function ZoneLocalMappingResolver(mapping As ZoneLocalMapping) As ZonedDateTime
  exceptions:
  - type: NodaTime.AmbiguousTimeException
    commentId: T:NodaTime.AmbiguousTimeException
    description: The implementation rejects requests to map ambiguous times.
  - type: NodaTime.SkippedTimeException
    commentId: T:NodaTime.SkippedTimeException
    description: The implementation rejects requests to map skipped times.
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
references:
- uid: NodaTime.LocalDateTime.InZone(NodaTime.DateTimeZone,NodaTime.TimeZones.ZoneLocalMappingResolver)
  commentId: M:NodaTime.LocalDateTime.InZone(NodaTime.DateTimeZone,NodaTime.TimeZones.ZoneLocalMappingResolver)
  isExternal: true
- uid: NodaTime.DateTimeZone.ResolveLocal(NodaTime.LocalDateTime,NodaTime.TimeZones.ZoneLocalMappingResolver)
  commentId: M:NodaTime.DateTimeZone.ResolveLocal(NodaTime.LocalDateTime,NodaTime.TimeZones.ZoneLocalMappingResolver)
  parent: NodaTime.DateTimeZone
  name: ResolveLocal(LocalDateTime, ZoneLocalMappingResolver)
  nameWithType: DateTimeZone.ResolveLocal(LocalDateTime, ZoneLocalMappingResolver)
  fullName: NodaTime.DateTimeZone.ResolveLocal(NodaTime.LocalDateTime, NodaTime.TimeZones.ZoneLocalMappingResolver)
  spec.csharp:
  - uid: NodaTime.DateTimeZone.ResolveLocal(NodaTime.LocalDateTime,NodaTime.TimeZones.ZoneLocalMappingResolver)
    name: ResolveLocal
    nameWithType: DateTimeZone.ResolveLocal
    fullName: NodaTime.DateTimeZone.ResolveLocal
  - name: (
    nameWithType: (
    fullName: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    nameWithType: LocalDateTime
    fullName: NodaTime.LocalDateTime
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NodaTime.TimeZones.ZoneLocalMappingResolver
    name: ZoneLocalMappingResolver
    nameWithType: ZoneLocalMappingResolver
    fullName: NodaTime.TimeZones.ZoneLocalMappingResolver
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NodaTime.DateTimeZone.ResolveLocal(NodaTime.LocalDateTime,NodaTime.TimeZones.ZoneLocalMappingResolver)
    name: ResolveLocal
    nameWithType: DateTimeZone.ResolveLocal
    fullName: NodaTime.DateTimeZone.ResolveLocal
  - name: (
    nameWithType: (
    fullName: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    nameWithType: LocalDateTime
    fullName: NodaTime.LocalDateTime
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NodaTime.TimeZones.ZoneLocalMappingResolver
    name: ZoneLocalMappingResolver
    nameWithType: ZoneLocalMappingResolver
    fullName: NodaTime.TimeZones.ZoneLocalMappingResolver
  - name: )
    nameWithType: )
    fullName: )
- uid: NodaTime.TimeZones.ZoneLocalMapping
  commentId: T:NodaTime.TimeZones.ZoneLocalMapping
  parent: NodaTime.TimeZones
  name: ZoneLocalMapping
  nameWithType: ZoneLocalMapping
  fullName: NodaTime.TimeZones.ZoneLocalMapping
- uid: NodaTime.ZonedDateTime
  commentId: T:NodaTime.ZonedDateTime
  parent: NodaTime
  name: ZonedDateTime
  nameWithType: ZonedDateTime
  fullName: NodaTime.ZonedDateTime
- uid: NodaTime.TimeZones.Resolvers
  commentId: T:NodaTime.TimeZones.Resolvers
  name: Resolvers
  nameWithType: Resolvers
  fullName: NodaTime.TimeZones.Resolvers
- uid: NodaTime.TimeZones.SkippedTimeResolver
  commentId: T:NodaTime.TimeZones.SkippedTimeResolver
  parent: NodaTime.TimeZones
  name: SkippedTimeResolver
  nameWithType: SkippedTimeResolver
  fullName: NodaTime.TimeZones.SkippedTimeResolver
- uid: NodaTime.TimeZones.AmbiguousTimeResolver
  commentId: T:NodaTime.TimeZones.AmbiguousTimeResolver
  parent: NodaTime.TimeZones
  name: AmbiguousTimeResolver
  nameWithType: AmbiguousTimeResolver
  fullName: NodaTime.TimeZones.AmbiguousTimeResolver
- uid: NodaTime.AmbiguousTimeException
  commentId: T:NodaTime.AmbiguousTimeException
  name: AmbiguousTimeException
  nameWithType: AmbiguousTimeException
  fullName: NodaTime.AmbiguousTimeException
- uid: NodaTime.SkippedTimeException
  commentId: T:NodaTime.SkippedTimeException
  name: SkippedTimeException
  nameWithType: SkippedTimeException
  fullName: NodaTime.SkippedTimeException
- uid: NodaTime.TimeZones
  commentId: N:NodaTime.TimeZones
  name: NodaTime.TimeZones
  nameWithType: NodaTime.TimeZones
  fullName: NodaTime.TimeZones
- uid: NodaTime.DateTimeZone
  commentId: T:NodaTime.DateTimeZone
  parent: NodaTime
  name: DateTimeZone
  nameWithType: DateTimeZone
  fullName: NodaTime.DateTimeZone
- uid: NodaTime
  commentId: N:NodaTime
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
shouldSkipMarkup: true
