### YamlMime:ManagedReference
items:
- uid: NodaTime.TimeAdjusters
  commentId: T:NodaTime.TimeAdjusters
  id: TimeAdjusters
  parent: NodaTime
  children:
  - NodaTime.TimeAdjusters.TruncateToHour
  - NodaTime.TimeAdjusters.TruncateToMinute
  - NodaTime.TimeAdjusters.TruncateToSecond
  langs:
  - csharp
  - vb
  name: TimeAdjusters
  nameWithType: TimeAdjusters
  fullName: NodaTime.TimeAdjusters
  type: Class
  source:
    remote:
      path: 2.2.x/src/NodaTime/TimeAdjusters.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: TimeAdjusters
    path: src/NodaTime/TimeAdjusters.cs
    startLine: 13
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nFactory class for time adjusters: functions from <xref href=\"NodaTime.LocalTime\" data-throw-if-not-resolved=\"false\"></xref> to <code>LocalTime</code>,\nwhich can be applied to <xref href=\"NodaTime.LocalTime\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"NodaTime.LocalDateTime\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"NodaTime.OffsetDateTime\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class TimeAdjusters
    content.vb: Public Module TimeAdjusters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: NodaTime.TimeAdjusters.TruncateToSecond
  commentId: P:NodaTime.TimeAdjusters.TruncateToSecond
  id: TruncateToSecond
  parent: NodaTime.TimeAdjusters
  langs:
  - csharp
  - vb
  name: TruncateToSecond
  nameWithType: TimeAdjusters.TruncateToSecond
  fullName: NodaTime.TimeAdjusters.TruncateToSecond
  type: Property
  source:
    remote:
      path: 2.2.x/src/NodaTime/TimeAdjusters.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: TruncateToSecond
    path: src/NodaTime/TimeAdjusters.cs
    startLine: 19
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nGets a time adjuster to truncate the time to the second, discarding fractional seconds.\n"
  example: []
  syntax:
    content: public static Func<LocalTime, LocalTime> TruncateToSecond { get; }
    parameters: []
    return:
      type: System.Func{NodaTime.LocalTime,NodaTime.LocalTime}
      description: A time adjuster to truncate the time to the second, discarding fractional seconds.
    content.vb: Public Shared ReadOnly Property TruncateToSecond As Func(Of LocalTime, LocalTime)
  overload: NodaTime.TimeAdjusters.TruncateToSecond*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NodaTime.TimeAdjusters.TruncateToMinute
  commentId: P:NodaTime.TimeAdjusters.TruncateToMinute
  id: TruncateToMinute
  parent: NodaTime.TimeAdjusters
  langs:
  - csharp
  - vb
  name: TruncateToMinute
  nameWithType: TimeAdjusters.TruncateToMinute
  fullName: NodaTime.TimeAdjusters.TruncateToMinute
  type: Property
  source:
    remote:
      path: 2.2.x/src/NodaTime/TimeAdjusters.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: TruncateToMinute
    path: src/NodaTime/TimeAdjusters.cs
    startLine: 26
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nGets a time adjuster to truncate the time to the minute, discarding fractional minutes.\n"
  example: []
  syntax:
    content: public static Func<LocalTime, LocalTime> TruncateToMinute { get; }
    parameters: []
    return:
      type: System.Func{NodaTime.LocalTime,NodaTime.LocalTime}
      description: A time adjuster to truncate the time to the minute, discarding fractional minutes.
    content.vb: Public Shared ReadOnly Property TruncateToMinute As Func(Of LocalTime, LocalTime)
  overload: NodaTime.TimeAdjusters.TruncateToMinute*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NodaTime.TimeAdjusters.TruncateToHour
  commentId: P:NodaTime.TimeAdjusters.TruncateToHour
  id: TruncateToHour
  parent: NodaTime.TimeAdjusters
  langs:
  - csharp
  - vb
  name: TruncateToHour
  nameWithType: TimeAdjusters.TruncateToHour
  fullName: NodaTime.TimeAdjusters.TruncateToHour
  type: Property
  source:
    remote:
      path: 2.2.x/src/NodaTime/TimeAdjusters.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: TruncateToHour
    path: src/NodaTime/TimeAdjusters.cs
    startLine: 33
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nGet a time adjuster to truncate the time to the hour, discarding fractional hours.\n"
  example: []
  syntax:
    content: public static Func<LocalTime, LocalTime> TruncateToHour { get; }
    parameters: []
    return:
      type: System.Func{NodaTime.LocalTime,NodaTime.LocalTime}
      description: A time adjuster to truncate the time to the hour, discarding fractional hours.
    content.vb: Public Shared ReadOnly Property TruncateToHour As Func(Of LocalTime, LocalTime)
  overload: NodaTime.TimeAdjusters.TruncateToHour*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: NodaTime.LocalTime
  commentId: T:NodaTime.LocalTime
  parent: NodaTime
  name: LocalTime
  nameWithType: LocalTime
  fullName: NodaTime.LocalTime
- uid: NodaTime.LocalDateTime
  commentId: T:NodaTime.LocalDateTime
  parent: NodaTime
  name: LocalDateTime
  nameWithType: LocalDateTime
  fullName: NodaTime.LocalDateTime
- uid: NodaTime.OffsetDateTime
  commentId: T:NodaTime.OffsetDateTime
  parent: NodaTime
  name: OffsetDateTime
  nameWithType: OffsetDateTime
  fullName: NodaTime.OffsetDateTime
- uid: NodaTime
  commentId: N:NodaTime
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NodaTime.TimeAdjusters.TruncateToSecond*
  commentId: Overload:NodaTime.TimeAdjusters.TruncateToSecond
  name: TruncateToSecond
  nameWithType: TimeAdjusters.TruncateToSecond
  fullName: NodaTime.TimeAdjusters.TruncateToSecond
- uid: System.Func{NodaTime.LocalTime,NodaTime.LocalTime}
  commentId: T:System.Func{NodaTime.LocalTime,NodaTime.LocalTime}
  parent: System
  definition: System.Func`2
  name: Func<LocalTime, LocalTime>
  nameWithType: Func<LocalTime, LocalTime>
  fullName: System.Func<NodaTime.LocalTime, NodaTime.LocalTime>
  nameWithType.vb: Func(Of LocalTime, LocalTime)
  fullName.vb: System.Func(Of NodaTime.LocalTime, NodaTime.LocalTime)
  name.vb: Func(Of LocalTime, LocalTime)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NodaTime.LocalTime
    name: LocalTime
    nameWithType: LocalTime
    fullName: NodaTime.LocalTime
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NodaTime.LocalTime
    name: LocalTime
    nameWithType: LocalTime
    fullName: NodaTime.LocalTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NodaTime.LocalTime
    name: LocalTime
    nameWithType: LocalTime
    fullName: NodaTime.LocalTime
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NodaTime.LocalTime
    name: LocalTime
    nameWithType: LocalTime
    fullName: NodaTime.LocalTime
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: NodaTime.TimeAdjusters.TruncateToMinute*
  commentId: Overload:NodaTime.TimeAdjusters.TruncateToMinute
  name: TruncateToMinute
  nameWithType: TimeAdjusters.TruncateToMinute
  fullName: NodaTime.TimeAdjusters.TruncateToMinute
- uid: NodaTime.TimeAdjusters.TruncateToHour*
  commentId: Overload:NodaTime.TimeAdjusters.TruncateToHour
  name: TruncateToHour
  nameWithType: TimeAdjusters.TruncateToHour
  fullName: NodaTime.TimeAdjusters.TruncateToHour
shouldSkipMarkup: true
