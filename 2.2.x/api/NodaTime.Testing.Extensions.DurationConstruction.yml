### YamlMime:ManagedReference
items:
- uid: NodaTime.Testing.Extensions.DurationConstruction
  commentId: T:NodaTime.Testing.Extensions.DurationConstruction
  id: DurationConstruction
  parent: NodaTime.Testing.Extensions
  children:
  - NodaTime.Testing.Extensions.DurationConstruction.Days(System.Double)
  - NodaTime.Testing.Extensions.DurationConstruction.Days(System.Int32)
  - NodaTime.Testing.Extensions.DurationConstruction.Hours(System.Double)
  - NodaTime.Testing.Extensions.DurationConstruction.Hours(System.Int32)
  - NodaTime.Testing.Extensions.DurationConstruction.Milliseconds(System.Double)
  - NodaTime.Testing.Extensions.DurationConstruction.Milliseconds(System.Int32)
  - NodaTime.Testing.Extensions.DurationConstruction.Milliseconds(System.Int64)
  - NodaTime.Testing.Extensions.DurationConstruction.Minutes(System.Double)
  - NodaTime.Testing.Extensions.DurationConstruction.Minutes(System.Int32)
  - NodaTime.Testing.Extensions.DurationConstruction.Minutes(System.Int64)
  - NodaTime.Testing.Extensions.DurationConstruction.Nanoseconds(System.Double)
  - NodaTime.Testing.Extensions.DurationConstruction.Nanoseconds(System.Int32)
  - NodaTime.Testing.Extensions.DurationConstruction.Nanoseconds(System.Int64)
  - NodaTime.Testing.Extensions.DurationConstruction.Seconds(System.Double)
  - NodaTime.Testing.Extensions.DurationConstruction.Seconds(System.Int32)
  - NodaTime.Testing.Extensions.DurationConstruction.Seconds(System.Int64)
  - NodaTime.Testing.Extensions.DurationConstruction.Ticks(System.Double)
  - NodaTime.Testing.Extensions.DurationConstruction.Ticks(System.Int32)
  - NodaTime.Testing.Extensions.DurationConstruction.Ticks(System.Int64)
  langs:
  - csharp
  - vb
  name: DurationConstruction
  nameWithType: DurationConstruction
  fullName: NodaTime.Testing.Extensions.DurationConstruction
  type: Class
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/Extensions/DurationConstruction.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: DurationConstruction
    path: src/NodaTime.Testing/Extensions/DurationConstruction.cs
    startLine: 10
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: "\nExtension methods for constructing <xref href=\"NodaTime.Duration\" data-throw-if-not-resolved=\"false\"></xref> values.\n"
  example: []
  syntax:
    content: public static class DurationConstruction
    content.vb: Public Module DurationConstruction
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: NodaTime.Testing.Extensions.DurationConstruction.Days(System.Double)
  commentId: M:NodaTime.Testing.Extensions.DurationConstruction.Days(System.Double)
  id: Days(System.Double)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.DurationConstruction
  langs:
  - csharp
  - vb
  name: Days(Double)
  nameWithType: DurationConstruction.Days(Double)
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Days(System.Double)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/Extensions/DurationConstruction.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Days
    path: src/NodaTime.Testing/Extensions/DurationConstruction.cs
    startLine: 17
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: "\nConstructs a duration with the specified number of days.\n"
  example: []
  syntax:
    content: public static Duration Days(this double days)
    parameters:
    - id: days
      type: System.Double
      description: The desired number of days.
    return:
      type: NodaTime.Duration
      description: A duration with the specified number of days.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Days(days As Double) As Duration
  overload: NodaTime.Testing.Extensions.DurationConstruction.Days*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Testing.Extensions.DurationConstruction.Days(System.Int32)
  commentId: M:NodaTime.Testing.Extensions.DurationConstruction.Days(System.Int32)
  id: Days(System.Int32)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.DurationConstruction
  langs:
  - csharp
  - vb
  name: Days(Int32)
  nameWithType: DurationConstruction.Days(Int32)
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Days(System.Int32)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/Extensions/DurationConstruction.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Days
    path: src/NodaTime.Testing/Extensions/DurationConstruction.cs
    startLine: 24
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: "\nConstructs a duration with the specified number of days.\n"
  example: []
  syntax:
    content: public static Duration Days(this int days)
    parameters:
    - id: days
      type: System.Int32
      description: The desired number of days.
    return:
      type: NodaTime.Duration
      description: A duration with the specified number of days.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Days(days As Integer) As Duration
  overload: NodaTime.Testing.Extensions.DurationConstruction.Days*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Testing.Extensions.DurationConstruction.Hours(System.Double)
  commentId: M:NodaTime.Testing.Extensions.DurationConstruction.Hours(System.Double)
  id: Hours(System.Double)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.DurationConstruction
  langs:
  - csharp
  - vb
  name: Hours(Double)
  nameWithType: DurationConstruction.Hours(Double)
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Hours(System.Double)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/Extensions/DurationConstruction.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Hours
    path: src/NodaTime.Testing/Extensions/DurationConstruction.cs
    startLine: 31
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: "\nConstructs a duration with the specified number of hours.\n"
  example: []
  syntax:
    content: public static Duration Hours(this double hours)
    parameters:
    - id: hours
      type: System.Double
      description: The desired number of hours.
    return:
      type: NodaTime.Duration
      description: A duration with the specified number of hours.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Hours(hours As Double) As Duration
  overload: NodaTime.Testing.Extensions.DurationConstruction.Hours*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Testing.Extensions.DurationConstruction.Hours(System.Int32)
  commentId: M:NodaTime.Testing.Extensions.DurationConstruction.Hours(System.Int32)
  id: Hours(System.Int32)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.DurationConstruction
  langs:
  - csharp
  - vb
  name: Hours(Int32)
  nameWithType: DurationConstruction.Hours(Int32)
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Hours(System.Int32)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/Extensions/DurationConstruction.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Hours
    path: src/NodaTime.Testing/Extensions/DurationConstruction.cs
    startLine: 37
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: "\nConstructs a duration with the specified number of hours.\n"
  example: []
  syntax:
    content: public static Duration Hours(this int hours)
    parameters:
    - id: hours
      type: System.Int32
      description: The desired number of hours.
    return:
      type: NodaTime.Duration
      description: A duration with the specified number of hours.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Hours(hours As Integer) As Duration
  overload: NodaTime.Testing.Extensions.DurationConstruction.Hours*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Testing.Extensions.DurationConstruction.Minutes(System.Double)
  commentId: M:NodaTime.Testing.Extensions.DurationConstruction.Minutes(System.Double)
  id: Minutes(System.Double)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.DurationConstruction
  langs:
  - csharp
  - vb
  name: Minutes(Double)
  nameWithType: DurationConstruction.Minutes(Double)
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Minutes(System.Double)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/Extensions/DurationConstruction.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Minutes
    path: src/NodaTime.Testing/Extensions/DurationConstruction.cs
    startLine: 44
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: "\nConstructs a duration with the specified number of minutes.\n"
  example: []
  syntax:
    content: public static Duration Minutes(this double minutes)
    parameters:
    - id: minutes
      type: System.Double
      description: The desired number of minutes.
    return:
      type: NodaTime.Duration
      description: A duration with the specified number of minutes.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Minutes(minutes As Double) As Duration
  overload: NodaTime.Testing.Extensions.DurationConstruction.Minutes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Testing.Extensions.DurationConstruction.Minutes(System.Int32)
  commentId: M:NodaTime.Testing.Extensions.DurationConstruction.Minutes(System.Int32)
  id: Minutes(System.Int32)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.DurationConstruction
  langs:
  - csharp
  - vb
  name: Minutes(Int32)
  nameWithType: DurationConstruction.Minutes(Int32)
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Minutes(System.Int32)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/Extensions/DurationConstruction.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Minutes
    path: src/NodaTime.Testing/Extensions/DurationConstruction.cs
    startLine: 51
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: "\nConstructs a duration with the specified number of minutes.\n"
  example: []
  syntax:
    content: public static Duration Minutes(this int minutes)
    parameters:
    - id: minutes
      type: System.Int32
      description: The desired number of minutes.
    return:
      type: NodaTime.Duration
      description: A duration with the specified number of minutes.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Minutes(minutes As Integer) As Duration
  overload: NodaTime.Testing.Extensions.DurationConstruction.Minutes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Testing.Extensions.DurationConstruction.Minutes(System.Int64)
  commentId: M:NodaTime.Testing.Extensions.DurationConstruction.Minutes(System.Int64)
  id: Minutes(System.Int64)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.DurationConstruction
  langs:
  - csharp
  - vb
  name: Minutes(Int64)
  nameWithType: DurationConstruction.Minutes(Int64)
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Minutes(System.Int64)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/Extensions/DurationConstruction.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Minutes
    path: src/NodaTime.Testing/Extensions/DurationConstruction.cs
    startLine: 58
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: "\nConstructs a duration with the specified number of minutes.\n"
  example: []
  syntax:
    content: public static Duration Minutes(this long minutes)
    parameters:
    - id: minutes
      type: System.Int64
      description: The desired number of minutes.
    return:
      type: NodaTime.Duration
      description: A duration with the specified number of minutes.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Minutes(minutes As Long) As Duration
  overload: NodaTime.Testing.Extensions.DurationConstruction.Minutes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Testing.Extensions.DurationConstruction.Seconds(System.Double)
  commentId: M:NodaTime.Testing.Extensions.DurationConstruction.Seconds(System.Double)
  id: Seconds(System.Double)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.DurationConstruction
  langs:
  - csharp
  - vb
  name: Seconds(Double)
  nameWithType: DurationConstruction.Seconds(Double)
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Seconds(System.Double)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/Extensions/DurationConstruction.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Seconds
    path: src/NodaTime.Testing/Extensions/DurationConstruction.cs
    startLine: 65
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: "\nConstructs a duration with the specified number of seconds.\n"
  example: []
  syntax:
    content: public static Duration Seconds(this double seconds)
    parameters:
    - id: seconds
      type: System.Double
      description: The desired number of seconds.
    return:
      type: NodaTime.Duration
      description: A duration with the specified number of seconds.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Seconds(seconds As Double) As Duration
  overload: NodaTime.Testing.Extensions.DurationConstruction.Seconds*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Testing.Extensions.DurationConstruction.Seconds(System.Int32)
  commentId: M:NodaTime.Testing.Extensions.DurationConstruction.Seconds(System.Int32)
  id: Seconds(System.Int32)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.DurationConstruction
  langs:
  - csharp
  - vb
  name: Seconds(Int32)
  nameWithType: DurationConstruction.Seconds(Int32)
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Seconds(System.Int32)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/Extensions/DurationConstruction.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Seconds
    path: src/NodaTime.Testing/Extensions/DurationConstruction.cs
    startLine: 72
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: "\nConstructs a duration with the specified number of seconds.\n"
  example: []
  syntax:
    content: public static Duration Seconds(this int seconds)
    parameters:
    - id: seconds
      type: System.Int32
      description: The desired number of seconds.
    return:
      type: NodaTime.Duration
      description: A duration with the specified number of seconds.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Seconds(seconds As Integer) As Duration
  overload: NodaTime.Testing.Extensions.DurationConstruction.Seconds*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Testing.Extensions.DurationConstruction.Seconds(System.Int64)
  commentId: M:NodaTime.Testing.Extensions.DurationConstruction.Seconds(System.Int64)
  id: Seconds(System.Int64)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.DurationConstruction
  langs:
  - csharp
  - vb
  name: Seconds(Int64)
  nameWithType: DurationConstruction.Seconds(Int64)
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Seconds(System.Int64)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/Extensions/DurationConstruction.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Seconds
    path: src/NodaTime.Testing/Extensions/DurationConstruction.cs
    startLine: 79
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: "\nConstructs a duration with the specified number of seconds.\n"
  example: []
  syntax:
    content: public static Duration Seconds(this long seconds)
    parameters:
    - id: seconds
      type: System.Int64
      description: The desired number of seconds.
    return:
      type: NodaTime.Duration
      description: A duration with the specified number of seconds.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Seconds(seconds As Long) As Duration
  overload: NodaTime.Testing.Extensions.DurationConstruction.Seconds*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Testing.Extensions.DurationConstruction.Milliseconds(System.Double)
  commentId: M:NodaTime.Testing.Extensions.DurationConstruction.Milliseconds(System.Double)
  id: Milliseconds(System.Double)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.DurationConstruction
  langs:
  - csharp
  - vb
  name: Milliseconds(Double)
  nameWithType: DurationConstruction.Milliseconds(Double)
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Milliseconds(System.Double)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/Extensions/DurationConstruction.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Milliseconds
    path: src/NodaTime.Testing/Extensions/DurationConstruction.cs
    startLine: 86
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: "\nConstructs a duration with the specified number of milliseconds.\n"
  example: []
  syntax:
    content: public static Duration Milliseconds(this double milliseconds)
    parameters:
    - id: milliseconds
      type: System.Double
      description: The desired number of milliseconds.
    return:
      type: NodaTime.Duration
      description: A duration with the specified number of milliseconds.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Milliseconds(milliseconds As Double) As Duration
  overload: NodaTime.Testing.Extensions.DurationConstruction.Milliseconds*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Testing.Extensions.DurationConstruction.Milliseconds(System.Int32)
  commentId: M:NodaTime.Testing.Extensions.DurationConstruction.Milliseconds(System.Int32)
  id: Milliseconds(System.Int32)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.DurationConstruction
  langs:
  - csharp
  - vb
  name: Milliseconds(Int32)
  nameWithType: DurationConstruction.Milliseconds(Int32)
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Milliseconds(System.Int32)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/Extensions/DurationConstruction.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Milliseconds
    path: src/NodaTime.Testing/Extensions/DurationConstruction.cs
    startLine: 93
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: "\nConstructs a duration with the specified number of milliseconds.\n"
  example: []
  syntax:
    content: public static Duration Milliseconds(this int milliseconds)
    parameters:
    - id: milliseconds
      type: System.Int32
      description: The desired number of milliseconds.
    return:
      type: NodaTime.Duration
      description: A duration with the specified number of milliseconds.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Milliseconds(milliseconds As Integer) As Duration
  overload: NodaTime.Testing.Extensions.DurationConstruction.Milliseconds*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Testing.Extensions.DurationConstruction.Milliseconds(System.Int64)
  commentId: M:NodaTime.Testing.Extensions.DurationConstruction.Milliseconds(System.Int64)
  id: Milliseconds(System.Int64)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.DurationConstruction
  langs:
  - csharp
  - vb
  name: Milliseconds(Int64)
  nameWithType: DurationConstruction.Milliseconds(Int64)
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Milliseconds(System.Int64)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/Extensions/DurationConstruction.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Milliseconds
    path: src/NodaTime.Testing/Extensions/DurationConstruction.cs
    startLine: 100
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: "\nConstructs a duration with the specified number of milliseconds.\n"
  example: []
  syntax:
    content: public static Duration Milliseconds(this long milliseconds)
    parameters:
    - id: milliseconds
      type: System.Int64
      description: The desired number of milliseconds.
    return:
      type: NodaTime.Duration
      description: A duration with the specified number of milliseconds.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Milliseconds(milliseconds As Long) As Duration
  overload: NodaTime.Testing.Extensions.DurationConstruction.Milliseconds*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Testing.Extensions.DurationConstruction.Ticks(System.Double)
  commentId: M:NodaTime.Testing.Extensions.DurationConstruction.Ticks(System.Double)
  id: Ticks(System.Double)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.DurationConstruction
  langs:
  - csharp
  - vb
  name: Ticks(Double)
  nameWithType: DurationConstruction.Ticks(Double)
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Ticks(System.Double)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/Extensions/DurationConstruction.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Ticks
    path: src/NodaTime.Testing/Extensions/DurationConstruction.cs
    startLine: 107
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: "\nConstructs a duration with the specified number of ticks.\n"
  example: []
  syntax:
    content: public static Duration Ticks(this double ticks)
    parameters:
    - id: ticks
      type: System.Double
      description: The desired number of ticks.
    return:
      type: NodaTime.Duration
      description: A duration with the specified number of ticks.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Ticks(ticks As Double) As Duration
  overload: NodaTime.Testing.Extensions.DurationConstruction.Ticks*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Testing.Extensions.DurationConstruction.Ticks(System.Int32)
  commentId: M:NodaTime.Testing.Extensions.DurationConstruction.Ticks(System.Int32)
  id: Ticks(System.Int32)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.DurationConstruction
  langs:
  - csharp
  - vb
  name: Ticks(Int32)
  nameWithType: DurationConstruction.Ticks(Int32)
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Ticks(System.Int32)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/Extensions/DurationConstruction.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Ticks
    path: src/NodaTime.Testing/Extensions/DurationConstruction.cs
    startLine: 114
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: "\nConstructs a duration with the specified number of ticks.\n"
  example: []
  syntax:
    content: public static Duration Ticks(this int ticks)
    parameters:
    - id: ticks
      type: System.Int32
      description: The desired number of ticks.
    return:
      type: NodaTime.Duration
      description: A duration with the specified number of ticks.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Ticks(ticks As Integer) As Duration
  overload: NodaTime.Testing.Extensions.DurationConstruction.Ticks*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Testing.Extensions.DurationConstruction.Ticks(System.Int64)
  commentId: M:NodaTime.Testing.Extensions.DurationConstruction.Ticks(System.Int64)
  id: Ticks(System.Int64)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.DurationConstruction
  langs:
  - csharp
  - vb
  name: Ticks(Int64)
  nameWithType: DurationConstruction.Ticks(Int64)
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Ticks(System.Int64)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/Extensions/DurationConstruction.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Ticks
    path: src/NodaTime.Testing/Extensions/DurationConstruction.cs
    startLine: 121
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: "\nConstructs a duration with the specified number of ticks.\n"
  example: []
  syntax:
    content: public static Duration Ticks(this long ticks)
    parameters:
    - id: ticks
      type: System.Int64
      description: The desired number of ticks.
    return:
      type: NodaTime.Duration
      description: A duration with the specified number of ticks.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Ticks(ticks As Long) As Duration
  overload: NodaTime.Testing.Extensions.DurationConstruction.Ticks*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Testing.Extensions.DurationConstruction.Nanoseconds(System.Double)
  commentId: M:NodaTime.Testing.Extensions.DurationConstruction.Nanoseconds(System.Double)
  id: Nanoseconds(System.Double)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.DurationConstruction
  langs:
  - csharp
  - vb
  name: Nanoseconds(Double)
  nameWithType: DurationConstruction.Nanoseconds(Double)
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Nanoseconds(System.Double)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/Extensions/DurationConstruction.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Nanoseconds
    path: src/NodaTime.Testing/Extensions/DurationConstruction.cs
    startLine: 128
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: "\nConstructs a duration with the specified number of nanoseconds.\n"
  example: []
  syntax:
    content: public static Duration Nanoseconds(this double nanoseconds)
    parameters:
    - id: nanoseconds
      type: System.Double
      description: The desired number of nanoseconds.
    return:
      type: NodaTime.Duration
      description: A duration with the specified number of nanoseconds.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Nanoseconds(nanoseconds As Double) As Duration
  overload: NodaTime.Testing.Extensions.DurationConstruction.Nanoseconds*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Testing.Extensions.DurationConstruction.Nanoseconds(System.Int32)
  commentId: M:NodaTime.Testing.Extensions.DurationConstruction.Nanoseconds(System.Int32)
  id: Nanoseconds(System.Int32)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.DurationConstruction
  langs:
  - csharp
  - vb
  name: Nanoseconds(Int32)
  nameWithType: DurationConstruction.Nanoseconds(Int32)
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Nanoseconds(System.Int32)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/Extensions/DurationConstruction.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Nanoseconds
    path: src/NodaTime.Testing/Extensions/DurationConstruction.cs
    startLine: 135
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: "\nConstructs a duration with the specified number of nanoseconds.\n"
  example: []
  syntax:
    content: public static Duration Nanoseconds(this int nanoseconds)
    parameters:
    - id: nanoseconds
      type: System.Int32
      description: The desired number of nanoseconds.
    return:
      type: NodaTime.Duration
      description: A duration with the specified number of nanoseconds.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Nanoseconds(nanoseconds As Integer) As Duration
  overload: NodaTime.Testing.Extensions.DurationConstruction.Nanoseconds*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Testing.Extensions.DurationConstruction.Nanoseconds(System.Int64)
  commentId: M:NodaTime.Testing.Extensions.DurationConstruction.Nanoseconds(System.Int64)
  id: Nanoseconds(System.Int64)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.DurationConstruction
  langs:
  - csharp
  - vb
  name: Nanoseconds(Int64)
  nameWithType: DurationConstruction.Nanoseconds(Int64)
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Nanoseconds(System.Int64)
  type: Method
  source:
    remote:
      path: 2.2.x/src/NodaTime.Testing/Extensions/DurationConstruction.cs
      branch: history
      repo: https://github.com/nodatime/nodatime.git
    id: Nanoseconds
    path: src/NodaTime.Testing/Extensions/DurationConstruction.cs
    startLine: 142
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: "\nConstructs a duration with the specified number of nanoseconds.\n"
  example: []
  syntax:
    content: public static Duration Nanoseconds(this long nanoseconds)
    parameters:
    - id: nanoseconds
      type: System.Int64
      description: The desired number of nanoseconds.
    return:
      type: NodaTime.Duration
      description: A duration with the specified number of nanoseconds.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Nanoseconds(nanoseconds As Long) As Duration
  overload: NodaTime.Testing.Extensions.DurationConstruction.Nanoseconds*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: NodaTime.Duration
  commentId: T:NodaTime.Duration
  parent: NodaTime
  name: Duration
  nameWithType: Duration
  fullName: NodaTime.Duration
- uid: NodaTime.Testing.Extensions
  commentId: N:NodaTime.Testing.Extensions
  name: NodaTime.Testing.Extensions
  nameWithType: NodaTime.Testing.Extensions
  fullName: NodaTime.Testing.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NodaTime
  commentId: N:NodaTime
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NodaTime.Testing.Extensions.DurationConstruction.Days*
  commentId: Overload:NodaTime.Testing.Extensions.DurationConstruction.Days
  name: Days
  nameWithType: DurationConstruction.Days
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Days
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NodaTime.Testing.Extensions.DurationConstruction.Hours*
  commentId: Overload:NodaTime.Testing.Extensions.DurationConstruction.Hours
  name: Hours
  nameWithType: DurationConstruction.Hours
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Hours
- uid: NodaTime.Testing.Extensions.DurationConstruction.Minutes*
  commentId: Overload:NodaTime.Testing.Extensions.DurationConstruction.Minutes
  name: Minutes
  nameWithType: DurationConstruction.Minutes
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Minutes
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: NodaTime.Testing.Extensions.DurationConstruction.Seconds*
  commentId: Overload:NodaTime.Testing.Extensions.DurationConstruction.Seconds
  name: Seconds
  nameWithType: DurationConstruction.Seconds
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Seconds
- uid: NodaTime.Testing.Extensions.DurationConstruction.Milliseconds*
  commentId: Overload:NodaTime.Testing.Extensions.DurationConstruction.Milliseconds
  name: Milliseconds
  nameWithType: DurationConstruction.Milliseconds
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Milliseconds
- uid: NodaTime.Testing.Extensions.DurationConstruction.Ticks*
  commentId: Overload:NodaTime.Testing.Extensions.DurationConstruction.Ticks
  name: Ticks
  nameWithType: DurationConstruction.Ticks
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Ticks
- uid: NodaTime.Testing.Extensions.DurationConstruction.Nanoseconds*
  commentId: Overload:NodaTime.Testing.Extensions.DurationConstruction.Nanoseconds
  name: Nanoseconds
  nameWithType: DurationConstruction.Nanoseconds
  fullName: NodaTime.Testing.Extensions.DurationConstruction.Nanoseconds
shouldSkipMarkup: true
